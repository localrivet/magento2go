// Code generated by go-swagger; DO NOT EDIT.

package quote_guest_coupon_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new quote guest coupon management v1 API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for quote guest coupon management v1 API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	QuoteGuestCouponManagementV1GetGet(params *QuoteGuestCouponManagementV1GetGetParams, opts ...ClientOption) (*QuoteGuestCouponManagementV1GetGetOK, error)

	QuoteGuestCouponManagementV1RemoveDelete(params *QuoteGuestCouponManagementV1RemoveDeleteParams, opts ...ClientOption) (*QuoteGuestCouponManagementV1RemoveDeleteOK, error)

	QuoteGuestCouponManagementV1SetPut(params *QuoteGuestCouponManagementV1SetPutParams, opts ...ClientOption) (*QuoteGuestCouponManagementV1SetPutOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  QuoteGuestCouponManagementV1GetGet Return information for a coupon in a specified cart.
*/
func (a *Client) QuoteGuestCouponManagementV1GetGet(params *QuoteGuestCouponManagementV1GetGetParams, opts ...ClientOption) (*QuoteGuestCouponManagementV1GetGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewQuoteGuestCouponManagementV1GetGetParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "quoteGuestCouponManagementV1GetGet",
		Method:             "GET",
		PathPattern:        "/V1/guest-carts/{cartId}/coupons",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &QuoteGuestCouponManagementV1GetGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*QuoteGuestCouponManagementV1GetGetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*QuoteGuestCouponManagementV1GetGetDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  QuoteGuestCouponManagementV1RemoveDelete Delete a coupon from a specified cart.
*/
func (a *Client) QuoteGuestCouponManagementV1RemoveDelete(params *QuoteGuestCouponManagementV1RemoveDeleteParams, opts ...ClientOption) (*QuoteGuestCouponManagementV1RemoveDeleteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewQuoteGuestCouponManagementV1RemoveDeleteParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "quoteGuestCouponManagementV1RemoveDelete",
		Method:             "DELETE",
		PathPattern:        "/V1/guest-carts/{cartId}/coupons",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &QuoteGuestCouponManagementV1RemoveDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*QuoteGuestCouponManagementV1RemoveDeleteOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*QuoteGuestCouponManagementV1RemoveDeleteDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
  QuoteGuestCouponManagementV1SetPut Add a coupon by code to a specified cart.
*/
func (a *Client) QuoteGuestCouponManagementV1SetPut(params *QuoteGuestCouponManagementV1SetPutParams, opts ...ClientOption) (*QuoteGuestCouponManagementV1SetPutOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewQuoteGuestCouponManagementV1SetPutParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "quoteGuestCouponManagementV1SetPut",
		Method:             "PUT",
		PathPattern:        "/V1/guest-carts/{cartId}/coupons/{couponCode}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &QuoteGuestCouponManagementV1SetPutReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*QuoteGuestCouponManagementV1SetPutOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*QuoteGuestCouponManagementV1SetPutDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
