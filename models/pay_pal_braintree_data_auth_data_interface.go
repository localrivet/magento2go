// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PayPalBraintreeDataAuthDataInterface Interface AuthDataInterface
//
// swagger:model pay-pal-braintree-data-auth-data-interface
type PayPalBraintreeDataAuthDataInterface struct {

	// To success page
	// Required: true
	ActionSuccess *string `json:"action_success"`

	// Client token
	ClientToken string `json:"client_token,omitempty"`

	// Display name
	// Required: true
	DisplayName *string `json:"display_name"`

	// logged in
	// Required: true
	LoggedIn *bool `json:"logged_in"`

	// Current store code
	// Required: true
	StoreCode *string `json:"store_code"`
}

// Validate validates this pay pal braintree data auth data interface
func (m *PayPalBraintreeDataAuthDataInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActionSuccess(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoggedIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStoreCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PayPalBraintreeDataAuthDataInterface) validateActionSuccess(formats strfmt.Registry) error {

	if err := validate.Required("action_success", "body", m.ActionSuccess); err != nil {
		return err
	}

	return nil
}

func (m *PayPalBraintreeDataAuthDataInterface) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("display_name", "body", m.DisplayName); err != nil {
		return err
	}

	return nil
}

func (m *PayPalBraintreeDataAuthDataInterface) validateLoggedIn(formats strfmt.Registry) error {

	if err := validate.Required("logged_in", "body", m.LoggedIn); err != nil {
		return err
	}

	return nil
}

func (m *PayPalBraintreeDataAuthDataInterface) validateStoreCode(formats strfmt.Registry) error {

	if err := validate.Required("store_code", "body", m.StoreCode); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this pay pal braintree data auth data interface based on context it is used
func (m *PayPalBraintreeDataAuthDataInterface) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PayPalBraintreeDataAuthDataInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PayPalBraintreeDataAuthDataInterface) UnmarshalBinary(b []byte) error {
	var res PayPalBraintreeDataAuthDataInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
