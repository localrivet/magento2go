// Code generated by go-swagger; DO NOT EDIT.

package inventory_in_store_pickup_api_get_pickup_locations_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewInventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams creates a new InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewInventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams() *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	return &InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewInventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParamsWithTimeout creates a new InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams object
// with the ability to set a timeout on a request.
func NewInventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParamsWithTimeout(timeout time.Duration) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	return &InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams{
		timeout: timeout,
	}
}

// NewInventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParamsWithContext creates a new InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams object
// with the ability to set a context for a request.
func NewInventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParamsWithContext(ctx context.Context) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	return &InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams{
		Context: ctx,
	}
}

// NewInventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParamsWithHTTPClient creates a new InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewInventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParamsWithHTTPClient(client *http.Client) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	return &InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams{
		HTTPClient: client,
	}
}

/* InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams contains all the parameters to send to the API endpoint
   for the inventory in store pickup Api get pickup locations v1 execute get operation.

   Typically these are written to a http.Request.
*/
type InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams struct {

	/* SearchRequestAreaRadius.

	   Search radius in KM.
	*/
	SearchRequestAreaRadius *int64

	/* SearchRequestAreaSearchTerm.

	   Search term string.
	*/
	SearchRequestAreaSearchTerm *string

	/* SearchRequestCurrentPage.

	   Current page.
	*/
	SearchRequestCurrentPage *int64

	/* SearchRequestExtensionAttributesProductsInfo0Sku.

	   Product SKU.
	*/
	SearchRequestExtensionAttributesProductsInfo0Sku *string

	/* SearchRequestFiltersCityConditionType.

	   Condition Type.
	*/
	SearchRequestFiltersCityConditionType *string

	/* SearchRequestFiltersCityValue.

	   Value.
	*/
	SearchRequestFiltersCityValue *string

	/* SearchRequestFiltersCountryConditionType.

	   Condition Type.
	*/
	SearchRequestFiltersCountryConditionType *string

	/* SearchRequestFiltersCountryValue.

	   Value.
	*/
	SearchRequestFiltersCountryValue *string

	/* SearchRequestFiltersNameConditionType.

	   Condition Type.
	*/
	SearchRequestFiltersNameConditionType *string

	/* SearchRequestFiltersNameValue.

	   Value.
	*/
	SearchRequestFiltersNameValue *string

	/* SearchRequestFiltersPickupLocationCodeConditionType.

	   Condition Type.
	*/
	SearchRequestFiltersPickupLocationCodeConditionType *string

	/* SearchRequestFiltersPickupLocationCodeValue.

	   Value.
	*/
	SearchRequestFiltersPickupLocationCodeValue *string

	/* SearchRequestFiltersPostcodeConditionType.

	   Condition Type.
	*/
	SearchRequestFiltersPostcodeConditionType *string

	/* SearchRequestFiltersPostcodeValue.

	   Value.
	*/
	SearchRequestFiltersPostcodeValue *string

	/* SearchRequestFiltersRegionIDConditionType.

	   Condition Type.
	*/
	SearchRequestFiltersRegionIDConditionType *string

	/* SearchRequestFiltersRegionIDValue.

	   Value.
	*/
	SearchRequestFiltersRegionIDValue *string

	/* SearchRequestFiltersRegionConditionType.

	   Condition Type.
	*/
	SearchRequestFiltersRegionConditionType *string

	/* SearchRequestFiltersRegionValue.

	   Value.
	*/
	SearchRequestFiltersRegionValue *string

	/* SearchRequestFiltersStreetConditionType.

	   Condition Type.
	*/
	SearchRequestFiltersStreetConditionType *string

	/* SearchRequestFiltersStreetValue.

	   Value.
	*/
	SearchRequestFiltersStreetValue *string

	/* SearchRequestPageSize.

	   Page size.
	*/
	SearchRequestPageSize *int64

	/* SearchRequestScopeCode.

	   Sales Channel code.
	*/
	SearchRequestScopeCode *string

	/* SearchRequestScopeType.

	   Sales Channel Type.
	*/
	SearchRequestScopeType *string

	/* SearchRequestSort0Direction.

	   Sorting direction.
	*/
	SearchRequestSort0Direction *string

	/* SearchRequestSort0Field.

	   Sorting field.
	*/
	SearchRequestSort0Field *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the inventory in store pickup Api get pickup locations v1 execute get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithDefaults() *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the inventory in store pickup Api get pickup locations v1 execute get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithTimeout(timeout time.Duration) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithContext(ctx context.Context) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithHTTPClient(client *http.Client) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSearchRequestAreaRadius adds the searchRequestAreaRadius to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestAreaRadius(searchRequestAreaRadius *int64) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestAreaRadius(searchRequestAreaRadius)
	return o
}

// SetSearchRequestAreaRadius adds the searchRequestAreaRadius to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestAreaRadius(searchRequestAreaRadius *int64) {
	o.SearchRequestAreaRadius = searchRequestAreaRadius
}

// WithSearchRequestAreaSearchTerm adds the searchRequestAreaSearchTerm to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestAreaSearchTerm(searchRequestAreaSearchTerm *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestAreaSearchTerm(searchRequestAreaSearchTerm)
	return o
}

// SetSearchRequestAreaSearchTerm adds the searchRequestAreaSearchTerm to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestAreaSearchTerm(searchRequestAreaSearchTerm *string) {
	o.SearchRequestAreaSearchTerm = searchRequestAreaSearchTerm
}

// WithSearchRequestCurrentPage adds the searchRequestCurrentPage to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestCurrentPage(searchRequestCurrentPage *int64) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestCurrentPage(searchRequestCurrentPage)
	return o
}

// SetSearchRequestCurrentPage adds the searchRequestCurrentPage to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestCurrentPage(searchRequestCurrentPage *int64) {
	o.SearchRequestCurrentPage = searchRequestCurrentPage
}

// WithSearchRequestExtensionAttributesProductsInfo0Sku adds the searchRequestExtensionAttributesProductsInfo0Sku to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestExtensionAttributesProductsInfo0Sku(searchRequestExtensionAttributesProductsInfo0Sku *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestExtensionAttributesProductsInfo0Sku(searchRequestExtensionAttributesProductsInfo0Sku)
	return o
}

// SetSearchRequestExtensionAttributesProductsInfo0Sku adds the searchRequestExtensionAttributesProductsInfo0Sku to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestExtensionAttributesProductsInfo0Sku(searchRequestExtensionAttributesProductsInfo0Sku *string) {
	o.SearchRequestExtensionAttributesProductsInfo0Sku = searchRequestExtensionAttributesProductsInfo0Sku
}

// WithSearchRequestFiltersCityConditionType adds the searchRequestFiltersCityConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersCityConditionType(searchRequestFiltersCityConditionType *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersCityConditionType(searchRequestFiltersCityConditionType)
	return o
}

// SetSearchRequestFiltersCityConditionType adds the searchRequestFiltersCityConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersCityConditionType(searchRequestFiltersCityConditionType *string) {
	o.SearchRequestFiltersCityConditionType = searchRequestFiltersCityConditionType
}

// WithSearchRequestFiltersCityValue adds the searchRequestFiltersCityValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersCityValue(searchRequestFiltersCityValue *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersCityValue(searchRequestFiltersCityValue)
	return o
}

// SetSearchRequestFiltersCityValue adds the searchRequestFiltersCityValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersCityValue(searchRequestFiltersCityValue *string) {
	o.SearchRequestFiltersCityValue = searchRequestFiltersCityValue
}

// WithSearchRequestFiltersCountryConditionType adds the searchRequestFiltersCountryConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersCountryConditionType(searchRequestFiltersCountryConditionType *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersCountryConditionType(searchRequestFiltersCountryConditionType)
	return o
}

// SetSearchRequestFiltersCountryConditionType adds the searchRequestFiltersCountryConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersCountryConditionType(searchRequestFiltersCountryConditionType *string) {
	o.SearchRequestFiltersCountryConditionType = searchRequestFiltersCountryConditionType
}

// WithSearchRequestFiltersCountryValue adds the searchRequestFiltersCountryValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersCountryValue(searchRequestFiltersCountryValue *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersCountryValue(searchRequestFiltersCountryValue)
	return o
}

// SetSearchRequestFiltersCountryValue adds the searchRequestFiltersCountryValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersCountryValue(searchRequestFiltersCountryValue *string) {
	o.SearchRequestFiltersCountryValue = searchRequestFiltersCountryValue
}

// WithSearchRequestFiltersNameConditionType adds the searchRequestFiltersNameConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersNameConditionType(searchRequestFiltersNameConditionType *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersNameConditionType(searchRequestFiltersNameConditionType)
	return o
}

// SetSearchRequestFiltersNameConditionType adds the searchRequestFiltersNameConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersNameConditionType(searchRequestFiltersNameConditionType *string) {
	o.SearchRequestFiltersNameConditionType = searchRequestFiltersNameConditionType
}

// WithSearchRequestFiltersNameValue adds the searchRequestFiltersNameValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersNameValue(searchRequestFiltersNameValue *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersNameValue(searchRequestFiltersNameValue)
	return o
}

// SetSearchRequestFiltersNameValue adds the searchRequestFiltersNameValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersNameValue(searchRequestFiltersNameValue *string) {
	o.SearchRequestFiltersNameValue = searchRequestFiltersNameValue
}

// WithSearchRequestFiltersPickupLocationCodeConditionType adds the searchRequestFiltersPickupLocationCodeConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersPickupLocationCodeConditionType(searchRequestFiltersPickupLocationCodeConditionType *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersPickupLocationCodeConditionType(searchRequestFiltersPickupLocationCodeConditionType)
	return o
}

// SetSearchRequestFiltersPickupLocationCodeConditionType adds the searchRequestFiltersPickupLocationCodeConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersPickupLocationCodeConditionType(searchRequestFiltersPickupLocationCodeConditionType *string) {
	o.SearchRequestFiltersPickupLocationCodeConditionType = searchRequestFiltersPickupLocationCodeConditionType
}

// WithSearchRequestFiltersPickupLocationCodeValue adds the searchRequestFiltersPickupLocationCodeValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersPickupLocationCodeValue(searchRequestFiltersPickupLocationCodeValue *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersPickupLocationCodeValue(searchRequestFiltersPickupLocationCodeValue)
	return o
}

// SetSearchRequestFiltersPickupLocationCodeValue adds the searchRequestFiltersPickupLocationCodeValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersPickupLocationCodeValue(searchRequestFiltersPickupLocationCodeValue *string) {
	o.SearchRequestFiltersPickupLocationCodeValue = searchRequestFiltersPickupLocationCodeValue
}

// WithSearchRequestFiltersPostcodeConditionType adds the searchRequestFiltersPostcodeConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersPostcodeConditionType(searchRequestFiltersPostcodeConditionType *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersPostcodeConditionType(searchRequestFiltersPostcodeConditionType)
	return o
}

// SetSearchRequestFiltersPostcodeConditionType adds the searchRequestFiltersPostcodeConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersPostcodeConditionType(searchRequestFiltersPostcodeConditionType *string) {
	o.SearchRequestFiltersPostcodeConditionType = searchRequestFiltersPostcodeConditionType
}

// WithSearchRequestFiltersPostcodeValue adds the searchRequestFiltersPostcodeValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersPostcodeValue(searchRequestFiltersPostcodeValue *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersPostcodeValue(searchRequestFiltersPostcodeValue)
	return o
}

// SetSearchRequestFiltersPostcodeValue adds the searchRequestFiltersPostcodeValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersPostcodeValue(searchRequestFiltersPostcodeValue *string) {
	o.SearchRequestFiltersPostcodeValue = searchRequestFiltersPostcodeValue
}

// WithSearchRequestFiltersRegionIDConditionType adds the searchRequestFiltersRegionIDConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersRegionIDConditionType(searchRequestFiltersRegionIDConditionType *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersRegionIDConditionType(searchRequestFiltersRegionIDConditionType)
	return o
}

// SetSearchRequestFiltersRegionIDConditionType adds the searchRequestFiltersRegionIdConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersRegionIDConditionType(searchRequestFiltersRegionIDConditionType *string) {
	o.SearchRequestFiltersRegionIDConditionType = searchRequestFiltersRegionIDConditionType
}

// WithSearchRequestFiltersRegionIDValue adds the searchRequestFiltersRegionIDValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersRegionIDValue(searchRequestFiltersRegionIDValue *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersRegionIDValue(searchRequestFiltersRegionIDValue)
	return o
}

// SetSearchRequestFiltersRegionIDValue adds the searchRequestFiltersRegionIdValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersRegionIDValue(searchRequestFiltersRegionIDValue *string) {
	o.SearchRequestFiltersRegionIDValue = searchRequestFiltersRegionIDValue
}

// WithSearchRequestFiltersRegionConditionType adds the searchRequestFiltersRegionConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersRegionConditionType(searchRequestFiltersRegionConditionType *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersRegionConditionType(searchRequestFiltersRegionConditionType)
	return o
}

// SetSearchRequestFiltersRegionConditionType adds the searchRequestFiltersRegionConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersRegionConditionType(searchRequestFiltersRegionConditionType *string) {
	o.SearchRequestFiltersRegionConditionType = searchRequestFiltersRegionConditionType
}

// WithSearchRequestFiltersRegionValue adds the searchRequestFiltersRegionValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersRegionValue(searchRequestFiltersRegionValue *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersRegionValue(searchRequestFiltersRegionValue)
	return o
}

// SetSearchRequestFiltersRegionValue adds the searchRequestFiltersRegionValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersRegionValue(searchRequestFiltersRegionValue *string) {
	o.SearchRequestFiltersRegionValue = searchRequestFiltersRegionValue
}

// WithSearchRequestFiltersStreetConditionType adds the searchRequestFiltersStreetConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersStreetConditionType(searchRequestFiltersStreetConditionType *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersStreetConditionType(searchRequestFiltersStreetConditionType)
	return o
}

// SetSearchRequestFiltersStreetConditionType adds the searchRequestFiltersStreetConditionType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersStreetConditionType(searchRequestFiltersStreetConditionType *string) {
	o.SearchRequestFiltersStreetConditionType = searchRequestFiltersStreetConditionType
}

// WithSearchRequestFiltersStreetValue adds the searchRequestFiltersStreetValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestFiltersStreetValue(searchRequestFiltersStreetValue *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestFiltersStreetValue(searchRequestFiltersStreetValue)
	return o
}

// SetSearchRequestFiltersStreetValue adds the searchRequestFiltersStreetValue to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestFiltersStreetValue(searchRequestFiltersStreetValue *string) {
	o.SearchRequestFiltersStreetValue = searchRequestFiltersStreetValue
}

// WithSearchRequestPageSize adds the searchRequestPageSize to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestPageSize(searchRequestPageSize *int64) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestPageSize(searchRequestPageSize)
	return o
}

// SetSearchRequestPageSize adds the searchRequestPageSize to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestPageSize(searchRequestPageSize *int64) {
	o.SearchRequestPageSize = searchRequestPageSize
}

// WithSearchRequestScopeCode adds the searchRequestScopeCode to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestScopeCode(searchRequestScopeCode *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestScopeCode(searchRequestScopeCode)
	return o
}

// SetSearchRequestScopeCode adds the searchRequestScopeCode to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestScopeCode(searchRequestScopeCode *string) {
	o.SearchRequestScopeCode = searchRequestScopeCode
}

// WithSearchRequestScopeType adds the searchRequestScopeType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestScopeType(searchRequestScopeType *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestScopeType(searchRequestScopeType)
	return o
}

// SetSearchRequestScopeType adds the searchRequestScopeType to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestScopeType(searchRequestScopeType *string) {
	o.SearchRequestScopeType = searchRequestScopeType
}

// WithSearchRequestSort0Direction adds the searchRequestSort0Direction to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestSort0Direction(searchRequestSort0Direction *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestSort0Direction(searchRequestSort0Direction)
	return o
}

// SetSearchRequestSort0Direction adds the searchRequestSort0Direction to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestSort0Direction(searchRequestSort0Direction *string) {
	o.SearchRequestSort0Direction = searchRequestSort0Direction
}

// WithSearchRequestSort0Field adds the searchRequestSort0Field to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WithSearchRequestSort0Field(searchRequestSort0Field *string) *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams {
	o.SetSearchRequestSort0Field(searchRequestSort0Field)
	return o
}

// SetSearchRequestSort0Field adds the searchRequestSort0Field to the inventory in store pickup Api get pickup locations v1 execute get params
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) SetSearchRequestSort0Field(searchRequestSort0Field *string) {
	o.SearchRequestSort0Field = searchRequestSort0Field
}

// WriteToRequest writes these params to a swagger request
func (o *InventoryInStorePickupAPIGetPickupLocationsV1ExecuteGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SearchRequestAreaRadius != nil {

		// query param searchRequest[area][radius]
		var qrSearchRequestAreaRadius int64

		if o.SearchRequestAreaRadius != nil {
			qrSearchRequestAreaRadius = *o.SearchRequestAreaRadius
		}
		qSearchRequestAreaRadius := swag.FormatInt64(qrSearchRequestAreaRadius)
		if qSearchRequestAreaRadius != "" {

			if err := r.SetQueryParam("searchRequest[area][radius]", qSearchRequestAreaRadius); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestAreaSearchTerm != nil {

		// query param searchRequest[area][searchTerm]
		var qrSearchRequestAreaSearchTerm string

		if o.SearchRequestAreaSearchTerm != nil {
			qrSearchRequestAreaSearchTerm = *o.SearchRequestAreaSearchTerm
		}
		qSearchRequestAreaSearchTerm := qrSearchRequestAreaSearchTerm
		if qSearchRequestAreaSearchTerm != "" {

			if err := r.SetQueryParam("searchRequest[area][searchTerm]", qSearchRequestAreaSearchTerm); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestCurrentPage != nil {

		// query param searchRequest[currentPage]
		var qrSearchRequestCurrentPage int64

		if o.SearchRequestCurrentPage != nil {
			qrSearchRequestCurrentPage = *o.SearchRequestCurrentPage
		}
		qSearchRequestCurrentPage := swag.FormatInt64(qrSearchRequestCurrentPage)
		if qSearchRequestCurrentPage != "" {

			if err := r.SetQueryParam("searchRequest[currentPage]", qSearchRequestCurrentPage); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestExtensionAttributesProductsInfo0Sku != nil {

		// query param searchRequest[extensionAttributes][productsInfo][0][sku]
		var qrSearchRequestExtensionAttributesProductsInfo0Sku string

		if o.SearchRequestExtensionAttributesProductsInfo0Sku != nil {
			qrSearchRequestExtensionAttributesProductsInfo0Sku = *o.SearchRequestExtensionAttributesProductsInfo0Sku
		}
		qSearchRequestExtensionAttributesProductsInfo0Sku := qrSearchRequestExtensionAttributesProductsInfo0Sku
		if qSearchRequestExtensionAttributesProductsInfo0Sku != "" {

			if err := r.SetQueryParam("searchRequest[extensionAttributes][productsInfo][0][sku]", qSearchRequestExtensionAttributesProductsInfo0Sku); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersCityConditionType != nil {

		// query param searchRequest[filters][city][conditionType]
		var qrSearchRequestFiltersCityConditionType string

		if o.SearchRequestFiltersCityConditionType != nil {
			qrSearchRequestFiltersCityConditionType = *o.SearchRequestFiltersCityConditionType
		}
		qSearchRequestFiltersCityConditionType := qrSearchRequestFiltersCityConditionType
		if qSearchRequestFiltersCityConditionType != "" {

			if err := r.SetQueryParam("searchRequest[filters][city][conditionType]", qSearchRequestFiltersCityConditionType); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersCityValue != nil {

		// query param searchRequest[filters][city][value]
		var qrSearchRequestFiltersCityValue string

		if o.SearchRequestFiltersCityValue != nil {
			qrSearchRequestFiltersCityValue = *o.SearchRequestFiltersCityValue
		}
		qSearchRequestFiltersCityValue := qrSearchRequestFiltersCityValue
		if qSearchRequestFiltersCityValue != "" {

			if err := r.SetQueryParam("searchRequest[filters][city][value]", qSearchRequestFiltersCityValue); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersCountryConditionType != nil {

		// query param searchRequest[filters][country][conditionType]
		var qrSearchRequestFiltersCountryConditionType string

		if o.SearchRequestFiltersCountryConditionType != nil {
			qrSearchRequestFiltersCountryConditionType = *o.SearchRequestFiltersCountryConditionType
		}
		qSearchRequestFiltersCountryConditionType := qrSearchRequestFiltersCountryConditionType
		if qSearchRequestFiltersCountryConditionType != "" {

			if err := r.SetQueryParam("searchRequest[filters][country][conditionType]", qSearchRequestFiltersCountryConditionType); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersCountryValue != nil {

		// query param searchRequest[filters][country][value]
		var qrSearchRequestFiltersCountryValue string

		if o.SearchRequestFiltersCountryValue != nil {
			qrSearchRequestFiltersCountryValue = *o.SearchRequestFiltersCountryValue
		}
		qSearchRequestFiltersCountryValue := qrSearchRequestFiltersCountryValue
		if qSearchRequestFiltersCountryValue != "" {

			if err := r.SetQueryParam("searchRequest[filters][country][value]", qSearchRequestFiltersCountryValue); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersNameConditionType != nil {

		// query param searchRequest[filters][name][conditionType]
		var qrSearchRequestFiltersNameConditionType string

		if o.SearchRequestFiltersNameConditionType != nil {
			qrSearchRequestFiltersNameConditionType = *o.SearchRequestFiltersNameConditionType
		}
		qSearchRequestFiltersNameConditionType := qrSearchRequestFiltersNameConditionType
		if qSearchRequestFiltersNameConditionType != "" {

			if err := r.SetQueryParam("searchRequest[filters][name][conditionType]", qSearchRequestFiltersNameConditionType); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersNameValue != nil {

		// query param searchRequest[filters][name][value]
		var qrSearchRequestFiltersNameValue string

		if o.SearchRequestFiltersNameValue != nil {
			qrSearchRequestFiltersNameValue = *o.SearchRequestFiltersNameValue
		}
		qSearchRequestFiltersNameValue := qrSearchRequestFiltersNameValue
		if qSearchRequestFiltersNameValue != "" {

			if err := r.SetQueryParam("searchRequest[filters][name][value]", qSearchRequestFiltersNameValue); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersPickupLocationCodeConditionType != nil {

		// query param searchRequest[filters][pickupLocationCode][conditionType]
		var qrSearchRequestFiltersPickupLocationCodeConditionType string

		if o.SearchRequestFiltersPickupLocationCodeConditionType != nil {
			qrSearchRequestFiltersPickupLocationCodeConditionType = *o.SearchRequestFiltersPickupLocationCodeConditionType
		}
		qSearchRequestFiltersPickupLocationCodeConditionType := qrSearchRequestFiltersPickupLocationCodeConditionType
		if qSearchRequestFiltersPickupLocationCodeConditionType != "" {

			if err := r.SetQueryParam("searchRequest[filters][pickupLocationCode][conditionType]", qSearchRequestFiltersPickupLocationCodeConditionType); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersPickupLocationCodeValue != nil {

		// query param searchRequest[filters][pickupLocationCode][value]
		var qrSearchRequestFiltersPickupLocationCodeValue string

		if o.SearchRequestFiltersPickupLocationCodeValue != nil {
			qrSearchRequestFiltersPickupLocationCodeValue = *o.SearchRequestFiltersPickupLocationCodeValue
		}
		qSearchRequestFiltersPickupLocationCodeValue := qrSearchRequestFiltersPickupLocationCodeValue
		if qSearchRequestFiltersPickupLocationCodeValue != "" {

			if err := r.SetQueryParam("searchRequest[filters][pickupLocationCode][value]", qSearchRequestFiltersPickupLocationCodeValue); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersPostcodeConditionType != nil {

		// query param searchRequest[filters][postcode][conditionType]
		var qrSearchRequestFiltersPostcodeConditionType string

		if o.SearchRequestFiltersPostcodeConditionType != nil {
			qrSearchRequestFiltersPostcodeConditionType = *o.SearchRequestFiltersPostcodeConditionType
		}
		qSearchRequestFiltersPostcodeConditionType := qrSearchRequestFiltersPostcodeConditionType
		if qSearchRequestFiltersPostcodeConditionType != "" {

			if err := r.SetQueryParam("searchRequest[filters][postcode][conditionType]", qSearchRequestFiltersPostcodeConditionType); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersPostcodeValue != nil {

		// query param searchRequest[filters][postcode][value]
		var qrSearchRequestFiltersPostcodeValue string

		if o.SearchRequestFiltersPostcodeValue != nil {
			qrSearchRequestFiltersPostcodeValue = *o.SearchRequestFiltersPostcodeValue
		}
		qSearchRequestFiltersPostcodeValue := qrSearchRequestFiltersPostcodeValue
		if qSearchRequestFiltersPostcodeValue != "" {

			if err := r.SetQueryParam("searchRequest[filters][postcode][value]", qSearchRequestFiltersPostcodeValue); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersRegionIDConditionType != nil {

		// query param searchRequest[filters][regionId][conditionType]
		var qrSearchRequestFiltersRegionIDConditionType string

		if o.SearchRequestFiltersRegionIDConditionType != nil {
			qrSearchRequestFiltersRegionIDConditionType = *o.SearchRequestFiltersRegionIDConditionType
		}
		qSearchRequestFiltersRegionIDConditionType := qrSearchRequestFiltersRegionIDConditionType
		if qSearchRequestFiltersRegionIDConditionType != "" {

			if err := r.SetQueryParam("searchRequest[filters][regionId][conditionType]", qSearchRequestFiltersRegionIDConditionType); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersRegionIDValue != nil {

		// query param searchRequest[filters][regionId][value]
		var qrSearchRequestFiltersRegionIDValue string

		if o.SearchRequestFiltersRegionIDValue != nil {
			qrSearchRequestFiltersRegionIDValue = *o.SearchRequestFiltersRegionIDValue
		}
		qSearchRequestFiltersRegionIDValue := qrSearchRequestFiltersRegionIDValue
		if qSearchRequestFiltersRegionIDValue != "" {

			if err := r.SetQueryParam("searchRequest[filters][regionId][value]", qSearchRequestFiltersRegionIDValue); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersRegionConditionType != nil {

		// query param searchRequest[filters][region][conditionType]
		var qrSearchRequestFiltersRegionConditionType string

		if o.SearchRequestFiltersRegionConditionType != nil {
			qrSearchRequestFiltersRegionConditionType = *o.SearchRequestFiltersRegionConditionType
		}
		qSearchRequestFiltersRegionConditionType := qrSearchRequestFiltersRegionConditionType
		if qSearchRequestFiltersRegionConditionType != "" {

			if err := r.SetQueryParam("searchRequest[filters][region][conditionType]", qSearchRequestFiltersRegionConditionType); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersRegionValue != nil {

		// query param searchRequest[filters][region][value]
		var qrSearchRequestFiltersRegionValue string

		if o.SearchRequestFiltersRegionValue != nil {
			qrSearchRequestFiltersRegionValue = *o.SearchRequestFiltersRegionValue
		}
		qSearchRequestFiltersRegionValue := qrSearchRequestFiltersRegionValue
		if qSearchRequestFiltersRegionValue != "" {

			if err := r.SetQueryParam("searchRequest[filters][region][value]", qSearchRequestFiltersRegionValue); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersStreetConditionType != nil {

		// query param searchRequest[filters][street][conditionType]
		var qrSearchRequestFiltersStreetConditionType string

		if o.SearchRequestFiltersStreetConditionType != nil {
			qrSearchRequestFiltersStreetConditionType = *o.SearchRequestFiltersStreetConditionType
		}
		qSearchRequestFiltersStreetConditionType := qrSearchRequestFiltersStreetConditionType
		if qSearchRequestFiltersStreetConditionType != "" {

			if err := r.SetQueryParam("searchRequest[filters][street][conditionType]", qSearchRequestFiltersStreetConditionType); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestFiltersStreetValue != nil {

		// query param searchRequest[filters][street][value]
		var qrSearchRequestFiltersStreetValue string

		if o.SearchRequestFiltersStreetValue != nil {
			qrSearchRequestFiltersStreetValue = *o.SearchRequestFiltersStreetValue
		}
		qSearchRequestFiltersStreetValue := qrSearchRequestFiltersStreetValue
		if qSearchRequestFiltersStreetValue != "" {

			if err := r.SetQueryParam("searchRequest[filters][street][value]", qSearchRequestFiltersStreetValue); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestPageSize != nil {

		// query param searchRequest[pageSize]
		var qrSearchRequestPageSize int64

		if o.SearchRequestPageSize != nil {
			qrSearchRequestPageSize = *o.SearchRequestPageSize
		}
		qSearchRequestPageSize := swag.FormatInt64(qrSearchRequestPageSize)
		if qSearchRequestPageSize != "" {

			if err := r.SetQueryParam("searchRequest[pageSize]", qSearchRequestPageSize); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestScopeCode != nil {

		// query param searchRequest[scopeCode]
		var qrSearchRequestScopeCode string

		if o.SearchRequestScopeCode != nil {
			qrSearchRequestScopeCode = *o.SearchRequestScopeCode
		}
		qSearchRequestScopeCode := qrSearchRequestScopeCode
		if qSearchRequestScopeCode != "" {

			if err := r.SetQueryParam("searchRequest[scopeCode]", qSearchRequestScopeCode); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestScopeType != nil {

		// query param searchRequest[scopeType]
		var qrSearchRequestScopeType string

		if o.SearchRequestScopeType != nil {
			qrSearchRequestScopeType = *o.SearchRequestScopeType
		}
		qSearchRequestScopeType := qrSearchRequestScopeType
		if qSearchRequestScopeType != "" {

			if err := r.SetQueryParam("searchRequest[scopeType]", qSearchRequestScopeType); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestSort0Direction != nil {

		// query param searchRequest[sort][0][direction]
		var qrSearchRequestSort0Direction string

		if o.SearchRequestSort0Direction != nil {
			qrSearchRequestSort0Direction = *o.SearchRequestSort0Direction
		}
		qSearchRequestSort0Direction := qrSearchRequestSort0Direction
		if qSearchRequestSort0Direction != "" {

			if err := r.SetQueryParam("searchRequest[sort][0][direction]", qSearchRequestSort0Direction); err != nil {
				return err
			}
		}
	}

	if o.SearchRequestSort0Field != nil {

		// query param searchRequest[sort][0][field]
		var qrSearchRequestSort0Field string

		if o.SearchRequestSort0Field != nil {
			qrSearchRequestSort0Field = *o.SearchRequestSort0Field
		}
		qSearchRequestSort0Field := qrSearchRequestSort0Field
		if qSearchRequestSort0Field != "" {

			if err := r.SetQueryParam("searchRequest[sort][0][field]", qSearchRequestSort0Field); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
