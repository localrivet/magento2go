// Code generated by go-swagger; DO NOT EDIT.

package configurable_product_link_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"magento2go/models"
)

// ConfigurableProductLinkManagementV1GetChildrenGetReader is a Reader for the ConfigurableProductLinkManagementV1GetChildrenGet structure.
type ConfigurableProductLinkManagementV1GetChildrenGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConfigurableProductLinkManagementV1GetChildrenGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConfigurableProductLinkManagementV1GetChildrenGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewConfigurableProductLinkManagementV1GetChildrenGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewConfigurableProductLinkManagementV1GetChildrenGetOK creates a ConfigurableProductLinkManagementV1GetChildrenGetOK with default headers values
func NewConfigurableProductLinkManagementV1GetChildrenGetOK() *ConfigurableProductLinkManagementV1GetChildrenGetOK {
	return &ConfigurableProductLinkManagementV1GetChildrenGetOK{}
}

/* ConfigurableProductLinkManagementV1GetChildrenGetOK describes a response with status code 200, with default header values.

200 Success.
*/
type ConfigurableProductLinkManagementV1GetChildrenGetOK struct {
	Payload []*models.CatalogDataProductInterface
}

func (o *ConfigurableProductLinkManagementV1GetChildrenGetOK) Error() string {
	return fmt.Sprintf("[GET /V1/configurable-products/{sku}/children][%d] configurableProductLinkManagementV1GetChildrenGetOK  %+v", 200, o.Payload)
}
func (o *ConfigurableProductLinkManagementV1GetChildrenGetOK) GetPayload() []*models.CatalogDataProductInterface {
	return o.Payload
}

func (o *ConfigurableProductLinkManagementV1GetChildrenGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigurableProductLinkManagementV1GetChildrenGetDefault creates a ConfigurableProductLinkManagementV1GetChildrenGetDefault with default headers values
func NewConfigurableProductLinkManagementV1GetChildrenGetDefault(code int) *ConfigurableProductLinkManagementV1GetChildrenGetDefault {
	return &ConfigurableProductLinkManagementV1GetChildrenGetDefault{
		_statusCode: code,
	}
}

/* ConfigurableProductLinkManagementV1GetChildrenGetDefault describes a response with status code -1, with default header values.

Unexpected error
*/
type ConfigurableProductLinkManagementV1GetChildrenGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the configurable product link management v1 get children get default response
func (o *ConfigurableProductLinkManagementV1GetChildrenGetDefault) Code() int {
	return o._statusCode
}

func (o *ConfigurableProductLinkManagementV1GetChildrenGetDefault) Error() string {
	return fmt.Sprintf("[GET /V1/configurable-products/{sku}/children][%d] configurableProductLinkManagementV1GetChildrenGet default  %+v", o._statusCode, o.Payload)
}
func (o *ConfigurableProductLinkManagementV1GetChildrenGetDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ConfigurableProductLinkManagementV1GetChildrenGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
