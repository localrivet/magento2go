// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SalesRuleDataDiscountDataInterface Discount Data Interface
//
// swagger:model sales-rule-data-discount-data-interface
type SalesRuleDataDiscountDataInterface struct {

	// Amount
	// Required: true
	Amount *float64 `json:"amount"`

	// Base Amount
	// Required: true
	BaseAmount *float64 `json:"base_amount"`

	// Base Original Amount
	// Required: true
	BaseOriginalAmount *float64 `json:"base_original_amount"`

	// Original Amount
	// Required: true
	OriginalAmount *float64 `json:"original_amount"`
}

// Validate validates this sales rule data discount data interface
func (m *SalesRuleDataDiscountDataInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBaseAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBaseOriginalAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOriginalAmount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SalesRuleDataDiscountDataInterface) validateAmount(formats strfmt.Registry) error {

	if err := validate.Required("amount", "body", m.Amount); err != nil {
		return err
	}

	return nil
}

func (m *SalesRuleDataDiscountDataInterface) validateBaseAmount(formats strfmt.Registry) error {

	if err := validate.Required("base_amount", "body", m.BaseAmount); err != nil {
		return err
	}

	return nil
}

func (m *SalesRuleDataDiscountDataInterface) validateBaseOriginalAmount(formats strfmt.Registry) error {

	if err := validate.Required("base_original_amount", "body", m.BaseOriginalAmount); err != nil {
		return err
	}

	return nil
}

func (m *SalesRuleDataDiscountDataInterface) validateOriginalAmount(formats strfmt.Registry) error {

	if err := validate.Required("original_amount", "body", m.OriginalAmount); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this sales rule data discount data interface based on context it is used
func (m *SalesRuleDataDiscountDataInterface) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SalesRuleDataDiscountDataInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SalesRuleDataDiscountDataInterface) UnmarshalBinary(b []byte) error {
	var res SalesRuleDataDiscountDataInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
