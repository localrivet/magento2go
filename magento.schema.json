{
    "swagger": "2.0",
    "info": {
        "version": "2.4",
        "title": "Magento Community"
    },
    "host": "magento.test",
    "basePath": "/rest/default",
    "schemes": [
        "https"
    ],
    "tags": [
        {
            "name": "storeStoreRepositoryV1",
            "description": "Store repository interface"
        },
        {
            "name": "storeGroupRepositoryV1",
            "description": "Group repository interface"
        },
        {
            "name": "storeWebsiteRepositoryV1",
            "description": "Website repository interface"
        },
        {
            "name": "storeStoreConfigManagerV1",
            "description": "Store config manager interface"
        },
        {
            "name": "directoryCurrencyInformationAcquirerV1",
            "description": "Currency information acquirer interface"
        },
        {
            "name": "directoryCountryInformationAcquirerV1",
            "description": "Country information acquirer interface"
        },
        {
            "name": "searchV1",
            "description": "Search API for all requests"
        },
        {
            "name": "customerAccountManagementV1",
            "description": "Interface for managing customers accounts."
        },
        {
            "name": "cmsPageRepositoryV1",
            "description": "CMS page CRUD interface."
        },
        {
            "name": "cmsBlockRepositoryV1",
            "description": "CMS block CRUD interface."
        },
        {
            "name": "catalogProductRepositoryV1",
            "description": ""
        },
        {
            "name": "catalogProductAttributeRepositoryV1",
            "description": "Interface RepositoryInterface must be implemented in new model"
        },
        {
            "name": "catalogProductTypeListV1",
            "description": ""
        },
        {
            "name": "catalogAttributeSetRepositoryV1",
            "description": ""
        },
        {
            "name": "catalogProductAttributeManagementV1",
            "description": ""
        },
        {
            "name": "catalogProductAttributeGroupRepositoryV1",
            "description": ""
        },
        {
            "name": "catalogProductAttributeOptionManagementV1",
            "description": ""
        },
        {
            "name": "catalogProductMediaAttributeManagementV1",
            "description": ""
        },
        {
            "name": "catalogProductAttributeMediaGalleryManagementV1",
            "description": ""
        },
        {
            "name": "catalogProductTierPriceManagementV1",
            "description": ""
        },
        {
            "name": "catalogCategoryRepositoryV1",
            "description": ""
        },
        {
            "name": "catalogCategoryManagementV1",
            "description": ""
        },
        {
            "name": "catalogProductCustomOptionRepositoryV1",
            "description": ""
        },
        {
            "name": "catalogProductLinkTypeListV1",
            "description": ""
        },
        {
            "name": "catalogProductLinkManagementV1",
            "description": ""
        },
        {
            "name": "catalogCategoryLinkManagementV1",
            "description": ""
        },
        {
            "name": "catalogProductRenderListV1",
            "description": "Interface which provides product renders information for products."
        },
        {
            "name": "catalogInventoryStockRegistryV1",
            "description": "Interface StockRegistryInterface"
        },
        {
            "name": "quoteGuestCartRepositoryV1",
            "description": "Cart Repository interface for guest carts."
        },
        {
            "name": "quoteGuestCartManagementV1",
            "description": "Cart Management interface for guest carts."
        },
        {
            "name": "quoteGuestShippingMethodManagementV1",
            "description": "Shipping method management interface for guest carts."
        },
        {
            "name": "quoteGuestShipmentEstimationV1",
            "description": "Interface GuestShipmentEstimationInterface"
        },
        {
            "name": "quoteGuestCartItemRepositoryV1",
            "description": "Cart Item repository interface for guest carts."
        },
        {
            "name": "quoteGuestPaymentMethodManagementV1",
            "description": "Payment method management interface for guest carts."
        },
        {
            "name": "quoteGuestBillingAddressManagementV1",
            "description": "Billing address management interface for guest carts."
        },
        {
            "name": "quoteGuestCouponManagementV1",
            "description": "Coupon management interface for guest carts."
        },
        {
            "name": "quoteGuestCartTotalManagementV1",
            "description": "Bundled API to collect totals for cart based on shipping/payment methods and additional data."
        },
        {
            "name": "quoteGuestCartTotalRepositoryV1",
            "description": "Cart totals repository interface for guest carts."
        },
        {
            "name": "checkoutGuestShippingInformationManagementV1",
            "description": "Interface for managing guest shipping address information"
        },
        {
            "name": "checkoutGuestTotalsInformationManagementV1",
            "description": "Interface for guest quote totals calculation"
        },
        {
            "name": "checkoutGuestPaymentInformationManagementV1",
            "description": "Interface for managing guest payment information"
        },
        {
            "name": "integrationAdminTokenServiceV1",
            "description": "Interface providing token generation for Admins"
        },
        {
            "name": "integrationCustomerTokenServiceV1",
            "description": "Interface providing token generation for Customers"
        },
        {
            "name": "giftMessageGuestCartRepositoryV1",
            "description": "Interface GuestCartRepositoryInterface"
        },
        {
            "name": "giftMessageGuestItemRepositoryV1",
            "description": "Interface GuestItemRepositoryInterface"
        },
        {
            "name": "configurableProductLinkManagementV1",
            "description": "Manage children products of configurable product"
        },
        {
            "name": "configurableProductOptionRepositoryV1",
            "description": "Manage options of configurable product"
        },
        {
            "name": "inventoryInStorePickupApiGetPickupLocationsV1",
            "description": "Get Pickup Locations filtered by provided Search Request. Pickup Location entities are Immutable object and can not be changed after creation. All modification of Pickup Location must be done through @see \\Magento\\InventoryApi\\Api\\SourceRepositoryInterface"
        },
        {
            "name": "amazonPaymentAddressManagementV1",
            "description": ""
        },
        {
            "name": "amazonPaymentOrderInformationManagementV1",
            "description": ""
        },
        {
            "name": "payPalBraintreeAuthV1",
            "description": "Interface AuthInterface"
        },
        {
            "name": "vertexAddressValidationApiGuestCleanseAddressV1",
            "description": ""
        },
        {
            "name": "vertexAddressValidationAddressManagementV1",
            "description": ""
        }
    ],
    "paths": {
        "/V1/store/storeViews": {
            "get": {
                "tags": [
                    "storeStoreRepositoryV1"
                ],
                "description": "Retrieve list of all stores",
                "operationId": "storeStoreRepositoryV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store-data-store-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/store/storeGroups": {
            "get": {
                "tags": [
                    "storeGroupRepositoryV1"
                ],
                "description": "Retrieve list of all groups",
                "operationId": "storeGroupRepositoryV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store-data-group-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/store/websites": {
            "get": {
                "tags": [
                    "storeWebsiteRepositoryV1"
                ],
                "description": "Retrieve list of all websites",
                "operationId": "storeWebsiteRepositoryV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store-data-website-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/store/storeConfigs": {
            "get": {
                "tags": [
                    "storeStoreConfigManagerV1"
                ],
                "description": "",
                "operationId": "storeStoreConfigManagerV1GetStoreConfigsGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "storeCodes",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/store-data-store-config-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/directory/currency": {
            "get": {
                "tags": [
                    "directoryCurrencyInformationAcquirerV1"
                ],
                "description": "Get currency information for the store.",
                "operationId": "directoryCurrencyInformationAcquirerV1GetCurrencyInfoGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/directory-data-currency-information-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/directory/countries": {
            "get": {
                "tags": [
                    "directoryCountryInformationAcquirerV1"
                ],
                "description": "Get all countries and regions information for the store.",
                "operationId": "directoryCountryInformationAcquirerV1GetCountriesInfoGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/directory-data-country-information-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/directory/countries/{countryId}": {
            "get": {
                "tags": [
                    "directoryCountryInformationAcquirerV1"
                ],
                "description": "Get country and region information for the store.",
                "operationId": "directoryCountryInformationAcquirerV1GetCountryInfoGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/directory-data-country-information-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/search": {
            "get": {
                "tags": [
                    "searchV1"
                ],
                "description": "Make Full Text Search and return found Documents",
                "operationId": "searchV1SearchGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[requestName]",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/framework-search-search-result-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers": {
            "post": {
                "tags": [
                    "customerAccountManagementV1"
                ],
                "description": "Create customer account. Perform necessary business operations like sending email.",
                "operationId": "customerAccountManagementV1CreateAccountPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerAccountManagementV1CreateAccountPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "customer"
                            ],
                            "properties": {
                                "customer": {
                                    "$ref": "#/definitions/customer-data-customer-interface"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "redirectUrl": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/customer-data-customer-interface"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}": {
            "get": {
                "tags": [
                    "customerAccountManagementV1"
                ],
                "description": "Check if password reset token is valid.",
                "operationId": "customerAccountManagementV1ValidateResetPasswordLinkTokenGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "If null is given then a customer will be matched by the RP token."
                    },
                    {
                        "name": "resetPasswordLinkToken",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "True if the token is valid"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/password": {
            "put": {
                "tags": [
                    "customerAccountManagementV1"
                ],
                "description": "Send an email to the customer with a password reset link.",
                "operationId": "customerAccountManagementV1InitiatePasswordResetPut",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerAccountManagementV1InitiatePasswordResetPutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "email",
                                "template"
                            ],
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "template": {
                                    "type": "string"
                                },
                                "websiteId": {
                                    "type": "integer"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/resetPassword": {
            "post": {
                "tags": [
                    "customerAccountManagementV1"
                ],
                "description": "Reset customer password.",
                "operationId": "customerAccountManagementV1ResetPasswordPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerAccountManagementV1ResetPasswordPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "email",
                                "resetToken",
                                "newPassword"
                            ],
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "description": "If empty value given then the customer will be matched by the RP token."
                                },
                                "resetToken": {
                                    "type": "string"
                                },
                                "newPassword": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean",
                            "description": "true on success"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/customers/isEmailAvailable": {
            "post": {
                "tags": [
                    "customerAccountManagementV1"
                ],
                "description": "Check if given email is associated with a customer account in given website.",
                "operationId": "customerAccountManagementV1IsEmailAvailablePost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerAccountManagementV1IsEmailAvailablePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "customerEmail"
                            ],
                            "properties": {
                                "customerEmail": {
                                    "type": "string"
                                },
                                "websiteId": {
                                    "type": "integer",
                                    "description": "If not set, will use the current websiteId"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/cmsPage/{pageId}": {
            "get": {
                "tags": [
                    "cmsPageRepositoryV1"
                ],
                "description": "Retrieve page.",
                "operationId": "cmsPageRepositoryV1GetByIdGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pageId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/cms-data-page-interface"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/cmsBlock/{blockId}": {
            "get": {
                "tags": [
                    "cmsBlockRepositoryV1"
                ],
                "description": "Retrieve block.",
                "operationId": "cmsBlockRepositoryV1GetByIdGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "blockId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/cms-data-block-interface"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products": {
            "get": {
                "tags": [
                    "catalogProductRepositoryV1"
                ],
                "description": "Get product list",
                "operationId": "catalogProductRepositoryV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-search-results-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}": {
            "get": {
                "tags": [
                    "catalogProductRepositoryV1"
                ],
                "description": "Get info about product by product SKU",
                "operationId": "catalogProductRepositoryV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "editMode",
                        "in": "query",
                        "type": "boolean",
                        "required": false
                    },
                    {
                        "name": "storeId",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "name": "forceReload",
                        "in": "query",
                        "type": "boolean",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attributes/{attributeCode}": {
            "get": {
                "tags": [
                    "catalogProductAttributeRepositoryV1"
                ],
                "description": "Retrieve specific attribute",
                "operationId": "catalogProductAttributeRepositoryV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-attribute-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/types": {
            "get": {
                "tags": [
                    "catalogProductTypeListV1"
                ],
                "description": "Retrieve available product types",
                "operationId": "catalogProductTypeListV1GetProductTypesGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-type-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets/sets/list": {
            "get": {
                "tags": [
                    "catalogAttributeSetRepositoryV1"
                ],
                "description": "Retrieve list of Attribute Sets",
                "operationId": "catalogAttributeSetRepositoryV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-set-search-results-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets/{attributeSetId}": {
            "get": {
                "tags": [
                    "catalogAttributeSetRepositoryV1"
                ],
                "description": "Retrieve attribute set information based on given ID",
                "operationId": "catalogAttributeSetRepositoryV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "attributeSetId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-set-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets/{attributeSetId}/attributes": {
            "get": {
                "tags": [
                    "catalogProductAttributeManagementV1"
                ],
                "description": "Retrieve related attributes based on given attribute set ID",
                "operationId": "catalogProductAttributeManagementV1GetAttributesGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "attributeSetId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-attribute-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attribute-sets/groups/list": {
            "get": {
                "tags": [
                    "catalogProductAttributeGroupRepositoryV1"
                ],
                "description": "Retrieve list of attribute groups",
                "operationId": "catalogProductAttributeGroupRepositoryV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/eav-data-attribute-group-search-results-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/attributes/{attributeCode}/options": {
            "get": {
                "tags": [
                    "catalogProductAttributeOptionManagementV1"
                ],
                "description": "Retrieve list of attribute options",
                "operationId": "catalogProductAttributeOptionManagementV1GetItemsGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "attributeCode",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/eav-data-attribute-option-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/media/types/{attributeSetName}": {
            "get": {
                "tags": [
                    "catalogProductMediaAttributeManagementV1"
                ],
                "description": "Retrieve the list of media attributes (fronted input type is media_image) assigned to the given attribute set.",
                "operationId": "catalogProductMediaAttributeManagementV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "attributeSetName",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "list of media attributes",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-attribute-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/media/{entryId}": {
            "get": {
                "tags": [
                    "catalogProductAttributeMediaGalleryManagementV1"
                ],
                "description": "Return information about gallery entry",
                "operationId": "catalogProductAttributeMediaGalleryManagementV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "entryId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-attribute-media-gallery-entry-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/media": {
            "get": {
                "tags": [
                    "catalogProductAttributeMediaGalleryManagementV1"
                ],
                "description": "Retrieve the list of gallery entries associated with given product",
                "operationId": "catalogProductAttributeMediaGalleryManagementV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-attribute-media-gallery-entry-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/group-prices/{customerGroupId}/tiers": {
            "get": {
                "tags": [
                    "catalogProductTierPriceManagementV1"
                ],
                "description": "Get tier price of product",
                "operationId": "catalogProductTierPriceManagementV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "customerGroupId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "'all' can be used to specify 'ALL GROUPS'"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-tier-price-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/categories/{categoryId}": {
            "get": {
                "tags": [
                    "catalogCategoryRepositoryV1"
                ],
                "description": "Get info about category by category id",
                "operationId": "catalogCategoryRepositoryV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "storeId",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-category-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/categories": {
            "get": {
                "tags": [
                    "catalogCategoryManagementV1"
                ],
                "description": "Retrieve list of categories",
                "operationId": "catalogCategoryManagementV1GetTreeGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "rootCategoryId",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "name": "depth",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-category-tree-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/options": {
            "get": {
                "tags": [
                    "catalogProductCustomOptionRepositoryV1"
                ],
                "description": "Get the list of custom options for a specific product",
                "operationId": "catalogProductCustomOptionRepositoryV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-custom-option-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/options/{optionId}": {
            "get": {
                "tags": [
                    "catalogProductCustomOptionRepositoryV1"
                ],
                "description": "Get custom option for a specific product",
                "operationId": "catalogProductCustomOptionRepositoryV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "optionId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-custom-option-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/links/types": {
            "get": {
                "tags": [
                    "catalogProductLinkTypeListV1"
                ],
                "description": "Retrieve information about available product link types",
                "operationId": "catalogProductLinkTypeListV1GetItemsGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-link-type-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/links/{type}/attributes": {
            "get": {
                "tags": [
                    "catalogProductLinkTypeListV1"
                ],
                "description": "Provide a list of the product link type attributes",
                "operationId": "catalogProductLinkTypeListV1GetItemAttributesGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-link-attribute-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products/{sku}/links/{type}": {
            "get": {
                "tags": [
                    "catalogProductLinkManagementV1"
                ],
                "description": "Provide the list of links for a specific product",
                "operationId": "catalogProductLinkManagementV1GetLinkedItemsByTypeGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-link-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/categories/{categoryId}/products": {
            "get": {
                "tags": [
                    "catalogCategoryLinkManagementV1"
                ],
                "description": "Get products assigned to category",
                "operationId": "catalogCategoryLinkManagementV1GetAssignedProductsGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-category-product-link-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/products-render-info": {
            "get": {
                "tags": [
                    "catalogProductRenderListV1"
                ],
                "description": "Collect and retrieve the list of product render info. This info contains raw prices and formatted prices, product name, stock status, store_id, etc.",
                "operationId": "catalogProductRenderListV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Field"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value"
                    },
                    {
                        "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition type"
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchCriteria[sortOrders][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchCriteria[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchCriteria[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    },
                    {
                        "name": "storeId",
                        "in": "query",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-data-product-render-search-results-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/stockStatuses/{productSku}": {
            "get": {
                "tags": [
                    "catalogInventoryStockRegistryV1"
                ],
                "description": "",
                "operationId": "catalogInventoryStockRegistryV1GetStockStatusBySkuGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productSku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "scopeId",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/catalog-inventory-data-stock-status-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}": {
            "get": {
                "tags": [
                    "quoteGuestCartRepositoryV1"
                ],
                "description": "Enable a guest user to return information for a specified cart.",
                "operationId": "quoteGuestCartRepositoryV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-cart-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts": {
            "post": {
                "tags": [
                    "quoteGuestCartManagementV1"
                ],
                "description": "Enable an customer or guest user to create an empty cart and quote for an anonymous customer.",
                "operationId": "quoteGuestCartManagementV1CreateEmptyCartPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string",
                            "description": "Cart ID."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/order": {
            "put": {
                "tags": [
                    "quoteGuestCartManagementV1"
                ],
                "description": "Place an order for a specified cart.",
                "operationId": "quoteGuestCartManagementV1PlaceOrderPut",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "quoteGuestCartManagementV1PlaceOrderPutBody",
                        "in": "body",
                        "schema": {
                            "properties": {
                                "paymentMethod": {
                                    "$ref": "#/definitions/quote-data-payment-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "Order ID."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/shipping-methods": {
            "get": {
                "tags": [
                    "quoteGuestShippingMethodManagementV1"
                ],
                "description": "List applicable shipping methods for a specified quote.",
                "operationId": "quoteGuestShippingMethodManagementV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The shopping cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "An array of shipping methods.",
                            "items": {
                                "$ref": "#/definitions/quote-data-shipping-method-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/estimate-shipping-methods": {
            "post": {
                "tags": [
                    "quoteGuestShipmentEstimationV1"
                ],
                "description": "Estimate shipping by address and return list of available shipping methods",
                "operationId": "quoteGuestShipmentEstimationV1EstimateByExtendedAddressPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "quoteGuestShipmentEstimationV1EstimateByExtendedAddressPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "address"
                            ],
                            "properties": {
                                "address": {
                                    "$ref": "#/definitions/quote-data-address-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "An array of shipping methods",
                            "items": {
                                "$ref": "#/definitions/quote-data-shipping-method-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/items": {
            "get": {
                "tags": [
                    "quoteGuestCartItemRepositoryV1"
                ],
                "description": "List items that are assigned to a specified cart.",
                "operationId": "quoteGuestCartItemRepositoryV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "Array of items.",
                            "items": {
                                "$ref": "#/definitions/quote-data-cart-item-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "quoteGuestCartItemRepositoryV1"
                ],
                "description": "Add/update the specified cart item.",
                "operationId": "quoteGuestCartItemRepositoryV1SavePost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "quoteGuestCartItemRepositoryV1SavePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "cartItem"
                            ],
                            "properties": {
                                "cartItem": {
                                    "$ref": "#/definitions/quote-data-cart-item-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-cart-item-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/items/{itemId}": {
            "put": {
                "tags": [
                    "quoteGuestCartItemRepositoryV1"
                ],
                "description": "Add/update the specified cart item.",
                "operationId": "quoteGuestCartItemRepositoryV1SavePut",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "quoteGuestCartItemRepositoryV1SavePutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "cartItem"
                            ],
                            "properties": {
                                "cartItem": {
                                    "$ref": "#/definitions/quote-data-cart-item-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-cart-item-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "quoteGuestCartItemRepositoryV1"
                ],
                "description": "Remove the specified item from the specified cart.",
                "operationId": "quoteGuestCartItemRepositoryV1DeleteByIdDelete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The item ID of the item to be removed."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/selected-payment-method": {
            "get": {
                "tags": [
                    "quoteGuestPaymentMethodManagementV1"
                ],
                "description": "Return the payment method for a specified shopping cart.",
                "operationId": "quoteGuestPaymentMethodManagementV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-payment-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "quoteGuestPaymentMethodManagementV1"
                ],
                "description": "Add a specified payment method to a specified shopping cart.",
                "operationId": "quoteGuestPaymentMethodManagementV1SetPut",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "quoteGuestPaymentMethodManagementV1SetPutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "method"
                            ],
                            "properties": {
                                "method": {
                                    "$ref": "#/definitions/quote-data-payment-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "Payment method ID."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/payment-methods": {
            "get": {
                "tags": [
                    "quoteGuestPaymentMethodManagementV1"
                ],
                "description": "List available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object\u2019s attributes might not be included.  See https://devdocs.magento.com/codelinks/attributes.html#GuestPaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.",
                "operationId": "quoteGuestPaymentMethodManagementV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "description": "Array of payment methods.",
                            "items": {
                                "$ref": "#/definitions/quote-data-payment-method-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/billing-address": {
            "get": {
                "tags": [
                    "quoteGuestBillingAddressManagementV1"
                ],
                "description": "Return the billing address for a specified quote.",
                "operationId": "quoteGuestBillingAddressManagementV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-address-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "quoteGuestBillingAddressManagementV1"
                ],
                "description": "Assign a specified billing address to a specified cart.",
                "operationId": "quoteGuestBillingAddressManagementV1AssignPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "quoteGuestBillingAddressManagementV1AssignPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "address"
                            ],
                            "properties": {
                                "address": {
                                    "$ref": "#/definitions/quote-data-address-interface"
                                },
                                "useForShipping": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "Address ID."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/coupons": {
            "get": {
                "tags": [
                    "quoteGuestCouponManagementV1"
                ],
                "description": "Return information for a coupon in a specified cart.",
                "operationId": "quoteGuestCouponManagementV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string",
                            "description": "The coupon code data."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "quoteGuestCouponManagementV1"
                ],
                "description": "Delete a coupon from a specified cart.",
                "operationId": "quoteGuestCouponManagementV1RemoveDelete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/coupons/{couponCode}": {
            "put": {
                "tags": [
                    "quoteGuestCouponManagementV1"
                ],
                "description": "Add a coupon by code to a specified cart.",
                "operationId": "quoteGuestCouponManagementV1SetPut",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "couponCode",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The coupon code data."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/collect-totals": {
            "put": {
                "tags": [
                    "quoteGuestCartTotalManagementV1"
                ],
                "description": "Set shipping/billing methods and additional data for cart and collect totals for guest.",
                "operationId": "quoteGuestCartTotalManagementV1CollectTotalsPut",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "quoteGuestCartTotalManagementV1CollectTotalsPutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "paymentMethod"
                            ],
                            "properties": {
                                "paymentMethod": {
                                    "$ref": "#/definitions/quote-data-payment-interface"
                                },
                                "shippingCarrierCode": {
                                    "type": "string",
                                    "description": "The carrier code."
                                },
                                "shippingMethodCode": {
                                    "type": "string",
                                    "description": "The shipping method code."
                                },
                                "additionalData": {
                                    "$ref": "#/definitions/quote-data-totals-additional-data-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-totals-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/totals": {
            "get": {
                "tags": [
                    "quoteGuestCartTotalRepositoryV1"
                ],
                "description": "Return quote totals data for a specified cart.",
                "operationId": "quoteGuestCartTotalRepositoryV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-totals-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/shipping-information": {
            "post": {
                "tags": [
                    "checkoutGuestShippingInformationManagementV1"
                ],
                "description": "",
                "operationId": "checkoutGuestShippingInformationManagementV1SaveAddressInformationPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "checkoutGuestShippingInformationManagementV1SaveAddressInformationPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "addressInformation"
                            ],
                            "properties": {
                                "addressInformation": {
                                    "$ref": "#/definitions/checkout-data-shipping-information-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/checkout-data-payment-details-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/totals-information": {
            "post": {
                "tags": [
                    "checkoutGuestTotalsInformationManagementV1"
                ],
                "description": "Calculate quote totals based on address and shipping method.",
                "operationId": "checkoutGuestTotalsInformationManagementV1CalculatePost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "checkoutGuestTotalsInformationManagementV1CalculatePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "addressInformation"
                            ],
                            "properties": {
                                "addressInformation": {
                                    "$ref": "#/definitions/checkout-data-totals-information-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-totals-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/payment-information": {
            "post": {
                "tags": [
                    "checkoutGuestPaymentInformationManagementV1"
                ],
                "description": "Set payment information and place order for a specified cart.",
                "operationId": "checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "email",
                                "paymentMethod"
                            ],
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "paymentMethod": {
                                    "$ref": "#/definitions/quote-data-payment-interface"
                                },
                                "billingAddress": {
                                    "$ref": "#/definitions/quote-data-address-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "Order ID."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "checkoutGuestPaymentInformationManagementV1"
                ],
                "description": "Get payment information",
                "operationId": "checkoutGuestPaymentInformationManagementV1GetPaymentInformationGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/checkout-data-payment-details-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/set-payment-information": {
            "post": {
                "tags": [
                    "checkoutGuestPaymentInformationManagementV1"
                ],
                "description": "Set payment information for a specified cart.",
                "operationId": "checkoutGuestPaymentInformationManagementV1SavePaymentInformationPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "checkoutGuestPaymentInformationManagementV1SavePaymentInformationPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "email",
                                "paymentMethod"
                            ],
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "paymentMethod": {
                                    "$ref": "#/definitions/quote-data-payment-interface"
                                },
                                "billingAddress": {
                                    "$ref": "#/definitions/quote-data-address-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "integer",
                            "description": "Order ID."
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/integration/admin/token": {
            "post": {
                "tags": [
                    "integrationAdminTokenServiceV1"
                ],
                "description": "Create access token for admin given the admin credentials.",
                "operationId": "integrationAdminTokenServiceV1CreateAdminAccessTokenPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "integrationAdminTokenServiceV1CreateAdminAccessTokenPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "username",
                                "password"
                            ],
                            "properties": {
                                "username": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string",
                            "description": "Token created"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/integration/customer/token": {
            "post": {
                "tags": [
                    "integrationCustomerTokenServiceV1"
                ],
                "description": "Create access token for admin given the customer credentials.",
                "operationId": "integrationCustomerTokenServiceV1CreateCustomerAccessTokenPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "integrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "username",
                                "password"
                            ],
                            "properties": {
                                "username": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string",
                            "description": "Token created"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/gift-message": {
            "get": {
                "tags": [
                    "giftMessageGuestCartRepositoryV1"
                ],
                "description": "Return the gift message for a specified order.",
                "operationId": "giftMessageGuestCartRepositoryV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The shopping cart ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/gift-message-data-message-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "giftMessageGuestCartRepositoryV1"
                ],
                "description": "Set the gift message for an entire order.",
                "operationId": "giftMessageGuestCartRepositoryV1SavePost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "giftMessageGuestCartRepositoryV1SavePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "giftMessage"
                            ],
                            "properties": {
                                "giftMessage": {
                                    "$ref": "#/definitions/gift-message-data-message-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-carts/{cartId}/gift-message/{itemId}": {
            "get": {
                "tags": [
                    "giftMessageGuestItemRepositoryV1"
                ],
                "description": "Return the gift message for a specified item in a specified shopping cart.",
                "operationId": "giftMessageGuestItemRepositoryV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The shopping cart ID."
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The item ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/gift-message-data-message-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "giftMessageGuestItemRepositoryV1"
                ],
                "description": "Set the gift message for a specified item in a specified shopping cart.",
                "operationId": "giftMessageGuestItemRepositoryV1SavePost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "The cart ID."
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "The item ID."
                    },
                    {
                        "name": "giftMessageGuestItemRepositoryV1SavePostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "giftMessage"
                            ],
                            "properties": {
                                "giftMessage": {
                                    "$ref": "#/definitions/gift-message-data-message-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/configurable-products/{sku}/children": {
            "get": {
                "tags": [
                    "configurableProductLinkManagementV1"
                ],
                "description": "Get all children for Configurable product",
                "operationId": "configurableProductLinkManagementV1GetChildrenGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog-data-product-interface"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/configurable-products/{sku}/options/{id}": {
            "get": {
                "tags": [
                    "configurableProductOptionRepositoryV1"
                ],
                "description": "Get option for configurable product",
                "operationId": "configurableProductOptionRepositoryV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/configurable-product-data-option-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/configurable-products/{sku}/options/all": {
            "get": {
                "tags": [
                    "configurableProductOptionRepositoryV1"
                ],
                "description": "Get all options for configurable product",
                "operationId": "configurableProductOptionRepositoryV1GetListGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sku",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/configurable-product-data-option-interface"
                            }
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/inventory/in-store-pickup/pickup-locations/": {
            "get": {
                "tags": [
                    "inventoryInStorePickupApiGetPickupLocationsV1"
                ],
                "description": "Get Pickup Locations according to the results of filtration by Search Request.",
                "operationId": "inventoryInStorePickupApiGetPickupLocationsV1ExecuteGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchRequest[area][radius]",
                        "in": "query",
                        "type": "integer",
                        "description": "Search radius in KM."
                    },
                    {
                        "name": "searchRequest[area][searchTerm]",
                        "in": "query",
                        "type": "string",
                        "description": "Search term string."
                    },
                    {
                        "name": "searchRequest[filters][country][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value."
                    },
                    {
                        "name": "searchRequest[filters][country][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition Type."
                    },
                    {
                        "name": "searchRequest[filters][postcode][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value."
                    },
                    {
                        "name": "searchRequest[filters][postcode][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition Type."
                    },
                    {
                        "name": "searchRequest[filters][region][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value."
                    },
                    {
                        "name": "searchRequest[filters][region][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition Type."
                    },
                    {
                        "name": "searchRequest[filters][regionId][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value."
                    },
                    {
                        "name": "searchRequest[filters][regionId][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition Type."
                    },
                    {
                        "name": "searchRequest[filters][city][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value."
                    },
                    {
                        "name": "searchRequest[filters][city][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition Type."
                    },
                    {
                        "name": "searchRequest[filters][street][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value."
                    },
                    {
                        "name": "searchRequest[filters][street][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition Type."
                    },
                    {
                        "name": "searchRequest[filters][name][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value."
                    },
                    {
                        "name": "searchRequest[filters][name][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition Type."
                    },
                    {
                        "name": "searchRequest[filters][pickupLocationCode][value]",
                        "in": "query",
                        "type": "string",
                        "description": "Value."
                    },
                    {
                        "name": "searchRequest[filters][pickupLocationCode][conditionType]",
                        "in": "query",
                        "type": "string",
                        "description": "Condition Type."
                    },
                    {
                        "name": "searchRequest[pageSize]",
                        "in": "query",
                        "type": "integer",
                        "description": "Page size."
                    },
                    {
                        "name": "searchRequest[currentPage]",
                        "in": "query",
                        "type": "integer",
                        "description": "Current page."
                    },
                    {
                        "name": "searchRequest[scopeType]",
                        "in": "query",
                        "type": "string",
                        "description": "Sales Channel Type."
                    },
                    {
                        "name": "searchRequest[scopeCode]",
                        "in": "query",
                        "type": "string",
                        "description": "Sales Channel code."
                    },
                    {
                        "name": "searchRequest[sort][0][field]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting field."
                    },
                    {
                        "name": "searchRequest[sort][0][direction]",
                        "in": "query",
                        "type": "string",
                        "description": "Sorting direction."
                    },
                    {
                        "name": "searchRequest[extensionAttributes][productsInfo][0][sku]",
                        "in": "query",
                        "type": "string",
                        "description": "Product SKU."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-result-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/amazon-shipping-address/{amazonOrderReferenceId}": {
            "put": {
                "tags": [
                    "amazonPaymentAddressManagementV1"
                ],
                "description": "",
                "operationId": "amazonPaymentAddressManagementV1GetShippingAddressPut",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "amazonOrderReferenceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "amazonPaymentAddressManagementV1GetShippingAddressPutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "addressConsentToken"
                            ],
                            "properties": {
                                "addressConsentToken": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/amazon-billing-address/{amazonOrderReferenceId}": {
            "put": {
                "tags": [
                    "amazonPaymentAddressManagementV1"
                ],
                "description": "",
                "operationId": "amazonPaymentAddressManagementV1GetBillingAddressPut",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "amazonOrderReferenceId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "amazonPaymentAddressManagementV1GetBillingAddressPutBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "addressConsentToken"
                            ],
                            "properties": {
                                "addressConsentToken": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/amazon/order-ref": {
            "delete": {
                "tags": [
                    "amazonPaymentOrderInformationManagementV1"
                ],
                "description": "",
                "operationId": "amazonPaymentOrderInformationManagementV1RemoveOrderReferenceDelete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/applepay/auth": {
            "get": {
                "tags": [
                    "payPalBraintreeAuthV1"
                ],
                "description": "Returns details required to be able to submit a payment with apple pay.",
                "operationId": "payPalBraintreeAuthV1GetGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/pay-pal-braintree-data-auth-data-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/guest-address/cleanse": {
            "post": {
                "tags": [
                    "vertexAddressValidationApiGuestCleanseAddressV1"
                ],
                "description": "Query Vertex to cleanse an address",
                "operationId": "vertexAddressValidationApiGuestCleanseAddressV1CleanseAddressPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vertexAddressValidationApiGuestCleanseAddressV1CleanseAddressPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "cartId",
                                "address"
                            ],
                            "properties": {
                                "cartId": {
                                    "type": "string",
                                    "description": "Guest Cart ID (used for auth)"
                                },
                                "address": {
                                    "$ref": "#/definitions/vertex-address-validation-api-data-address-interface"
                                },
                                "scopeCode": {
                                    "type": "string"
                                },
                                "scopeType": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/vertex-address-validation-api-data-cleansed-address-interface"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        },
        "/V1/vertex-address-validation/vertex-address": {
            "post": {
                "tags": [
                    "vertexAddressValidationAddressManagementV1"
                ],
                "description": "",
                "operationId": "vertexAddressValidationAddressManagementV1GetValidAddressPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vertexAddressValidationAddressManagementV1GetValidAddressPostBody",
                        "in": "body",
                        "schema": {
                            "required": [
                                "address"
                            ],
                            "properties": {
                                "address": {
                                    "$ref": "#/definitions/quote-data-address-interface"
                                }
                            },
                            "type": "object",
                            "xml": {
                                "name": "request"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 Success.",
                        "schema": {
                            "$ref": "#/definitions/quote-data-address-interface"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error-response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "error-response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Error message"
                },
                "errors": {
                    "$ref": "#/definitions/error-errors"
                },
                "code": {
                    "type": "integer",
                    "description": "Error code"
                },
                "parameters": {
                    "$ref": "#/definitions/error-parameters"
                },
                "trace": {
                    "type": "string",
                    "description": "Stack trace"
                }
            },
            "required": [
                "message"
            ]
        },
        "error-errors": {
            "type": "array",
            "description": "Errors list",
            "items": {
                "$ref": "#/definitions/error-errors-item"
            }
        },
        "error-errors-item": {
            "type": "object",
            "description": "Error details",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Error message"
                },
                "parameters": {
                    "$ref": "#/definitions/error-parameters"
                }
            }
        },
        "error-parameters": {
            "type": "array",
            "description": "Error parameters list",
            "items": {
                "$ref": "#/definitions/error-parameters-item"
            }
        },
        "error-parameters-item": {
            "type": "object",
            "description": "Error parameters item",
            "properties": {
                "resources": {
                    "type": "string",
                    "description": "ACL resource"
                },
                "fieldName": {
                    "type": "string",
                    "description": "Missing or invalid field name"
                },
                "fieldValue": {
                    "type": "string",
                    "description": "Incorrect field value"
                }
            }
        },
        "store-data-store-interface": {
            "type": "object",
            "description": "Store interface",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Store name"
                },
                "website_id": {
                    "type": "integer"
                },
                "store_group_id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "integer"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/store-data-store-extension-interface"
                }
            },
            "required": [
                "id",
                "code",
                "name",
                "website_id",
                "store_group_id",
                "is_active"
            ]
        },
        "store-data-store-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\StoreInterface"
        },
        "store-data-group-interface": {
            "type": "object",
            "description": "Group interface",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "website_id": {
                    "type": "integer"
                },
                "root_category_id": {
                    "type": "integer"
                },
                "default_store_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "code": {
                    "type": "string",
                    "description": "Group code."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/store-data-group-extension-interface"
                }
            },
            "required": [
                "id",
                "website_id",
                "root_category_id",
                "default_store_id",
                "name",
                "code"
            ]
        },
        "store-data-group-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\GroupInterface"
        },
        "store-data-website-interface": {
            "type": "object",
            "description": "Website interface",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Website name"
                },
                "default_group_id": {
                    "type": "integer"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/store-data-website-extension-interface"
                }
            },
            "required": [
                "id",
                "code",
                "name",
                "default_group_id"
            ]
        },
        "store-data-website-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\WebsiteInterface"
        },
        "store-data-store-config-interface": {
            "type": "object",
            "description": "Interface for store config",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Store id"
                },
                "code": {
                    "type": "string",
                    "description": "Store code"
                },
                "website_id": {
                    "type": "integer",
                    "description": "Website id of the store"
                },
                "locale": {
                    "type": "string",
                    "description": "Store locale"
                },
                "base_currency_code": {
                    "type": "string",
                    "description": "Base currency code"
                },
                "default_display_currency_code": {
                    "type": "string",
                    "description": "Default display currency code"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone of the store"
                },
                "weight_unit": {
                    "type": "string",
                    "description": "The unit of weight"
                },
                "base_url": {
                    "type": "string",
                    "description": "Base URL for the store"
                },
                "base_link_url": {
                    "type": "string",
                    "description": "Base link URL for the store"
                },
                "base_static_url": {
                    "type": "string",
                    "description": "Base static URL for the store"
                },
                "base_media_url": {
                    "type": "string",
                    "description": "Base media URL for the store"
                },
                "secure_base_url": {
                    "type": "string",
                    "description": "Secure base URL for the store"
                },
                "secure_base_link_url": {
                    "type": "string",
                    "description": "Secure base link URL for the store"
                },
                "secure_base_static_url": {
                    "type": "string",
                    "description": "Secure base static URL for the store"
                },
                "secure_base_media_url": {
                    "type": "string",
                    "description": "Secure base media URL for the store"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/store-data-store-config-extension-interface"
                }
            },
            "required": [
                "id",
                "code",
                "website_id",
                "locale",
                "base_currency_code",
                "default_display_currency_code",
                "timezone",
                "weight_unit",
                "base_url",
                "base_link_url",
                "base_static_url",
                "base_media_url",
                "secure_base_url",
                "secure_base_link_url",
                "secure_base_static_url",
                "secure_base_media_url"
            ]
        },
        "store-data-store-config-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\StoreConfigInterface"
        },
        "directory-data-currency-information-interface": {
            "type": "object",
            "description": "Currency Information interface.",
            "properties": {
                "base_currency_code": {
                    "type": "string",
                    "description": "The base currency code for the store."
                },
                "base_currency_symbol": {
                    "type": "string",
                    "description": "The currency symbol of the base currency for the store."
                },
                "default_display_currency_code": {
                    "type": "string",
                    "description": "The default display currency code for the store."
                },
                "default_display_currency_symbol": {
                    "type": "string",
                    "description": "The currency symbol of the default display currency for the store."
                },
                "available_currency_codes": {
                    "type": "array",
                    "description": "The list of allowed currency codes for the store.",
                    "items": {
                        "type": "string"
                    }
                },
                "exchange_rates": {
                    "type": "array",
                    "description": "The list of exchange rate information for the store.",
                    "items": {
                        "$ref": "#/definitions/directory-data-exchange-rate-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/directory-data-currency-information-extension-interface"
                }
            },
            "required": [
                "base_currency_code",
                "base_currency_symbol",
                "default_display_currency_code",
                "default_display_currency_symbol",
                "available_currency_codes",
                "exchange_rates"
            ]
        },
        "directory-data-exchange-rate-interface": {
            "type": "object",
            "description": "Exchange Rate interface.",
            "properties": {
                "currency_to": {
                    "type": "string",
                    "description": "The currency code associated with the exchange rate."
                },
                "rate": {
                    "type": "number",
                    "description": "The exchange rate for the associated currency and the store's base currency."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/directory-data-exchange-rate-extension-interface"
                }
            },
            "required": [
                "currency_to",
                "rate"
            ]
        },
        "directory-data-exchange-rate-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\ExchangeRateInterface"
        },
        "directory-data-currency-information-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\CurrencyInformationInterface"
        },
        "directory-data-country-information-interface": {
            "type": "object",
            "description": "Country Information interface.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The country id for the store."
                },
                "two_letter_abbreviation": {
                    "type": "string",
                    "description": "The country 2 letter abbreviation for the store."
                },
                "three_letter_abbreviation": {
                    "type": "string",
                    "description": "The country 3 letter abbreviation for the store."
                },
                "full_name_locale": {
                    "type": "string",
                    "description": "The country full name (in store locale) for the store."
                },
                "full_name_english": {
                    "type": "string",
                    "description": "The country full name (in English) for the store."
                },
                "available_regions": {
                    "type": "array",
                    "description": "The available regions for the store.",
                    "items": {
                        "$ref": "#/definitions/directory-data-region-information-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/directory-data-country-information-extension-interface"
                }
            },
            "required": [
                "id",
                "two_letter_abbreviation",
                "three_letter_abbreviation",
                "full_name_locale",
                "full_name_english"
            ]
        },
        "directory-data-region-information-interface": {
            "type": "object",
            "description": "Region Information interface.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Region id"
                },
                "code": {
                    "type": "string",
                    "description": "Region code"
                },
                "name": {
                    "type": "string",
                    "description": "Region name"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/directory-data-region-information-extension-interface"
                }
            },
            "required": [
                "id",
                "code",
                "name"
            ]
        },
        "directory-data-region-information-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\RegionInformationInterface"
        },
        "directory-data-country-information-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\CountryInformationInterface"
        },
        "framework-search-search-result-interface": {
            "type": "object",
            "description": "Interface SearchResultInterface",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/framework-search-document-interface"
                    }
                },
                "aggregations": {
                    "$ref": "#/definitions/framework-search-aggregation-interface"
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "aggregations",
                "search_criteria",
                "total_count"
            ]
        },
        "framework-search-document-interface": {
            "type": "object",
            "description": "Interface \\Magento\\Framework\\Api\\Search\\DocumentInterface",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "id"
            ]
        },
        "framework-attribute-interface": {
            "type": "object",
            "description": "Interface for custom attribute value.",
            "properties": {
                "attribute_code": {
                    "type": "string",
                    "description": "Attribute code"
                },
                "value": {
                    "type": "string",
                    "description": "Attribute value"
                }
            },
            "required": [
                "attribute_code",
                "value"
            ]
        },
        "framework-search-aggregation-interface": {
            "type": "object",
            "description": "Faceted data",
            "properties": {
                "buckets": {
                    "type": "array",
                    "description": "All Document fields",
                    "items": {
                        "$ref": "#/definitions/framework-search-bucket-interface"
                    }
                },
                "bucket_names": {
                    "type": "array",
                    "description": "Document field names",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "buckets",
                "bucket_names"
            ]
        },
        "framework-search-bucket-interface": {
            "type": "object",
            "description": "Facet Bucket",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Field name"
                },
                "values": {
                    "type": "array",
                    "description": "Field values",
                    "items": {
                        "$ref": "#/definitions/framework-search-aggregation-value-interface"
                    }
                }
            },
            "required": [
                "name",
                "values"
            ]
        },
        "framework-search-aggregation-value-interface": {
            "type": "object",
            "description": "Interface \\Magento\\Framework\\Api\\Search\\AggregationValueInterface",
            "properties": {
                "value": {
                    "type": "string",
                    "description": "Aggregation"
                },
                "metrics": {
                    "type": "array",
                    "description": "Metrics",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "value",
                "metrics"
            ]
        },
        "framework-search-search-criteria-interface": {
            "type": "object",
            "description": "Interface SearchCriteriaInterface",
            "properties": {
                "request_name": {
                    "type": "string"
                },
                "filter_groups": {
                    "type": "array",
                    "description": "A list of filter groups.",
                    "items": {
                        "$ref": "#/definitions/framework-search-filter-group"
                    }
                },
                "sort_orders": {
                    "type": "array",
                    "description": "Sort order.",
                    "items": {
                        "$ref": "#/definitions/framework-sort-order"
                    }
                },
                "page_size": {
                    "type": "integer",
                    "description": "Page size."
                },
                "current_page": {
                    "type": "integer",
                    "description": "Current page."
                }
            },
            "required": [
                "request_name",
                "filter_groups"
            ]
        },
        "framework-search-filter-group": {
            "type": "object",
            "description": "Groups two or more filters together using a logical OR",
            "properties": {
                "filters": {
                    "type": "array",
                    "description": "A list of filters in this group",
                    "items": {
                        "$ref": "#/definitions/framework-filter"
                    }
                }
            }
        },
        "framework-filter": {
            "type": "object",
            "description": "Filter which can be used by any methods from service layer.",
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Field"
                },
                "value": {
                    "type": "string",
                    "description": "Value"
                },
                "condition_type": {
                    "type": "string",
                    "description": "Condition type"
                }
            },
            "required": [
                "field",
                "value"
            ]
        },
        "framework-sort-order": {
            "type": "object",
            "description": "Data object for sort order.",
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Sorting field."
                },
                "direction": {
                    "type": "string",
                    "description": "Sorting direction."
                }
            },
            "required": [
                "field",
                "direction"
            ]
        },
        "customer-data-customer-interface": {
            "type": "object",
            "description": "Customer entity interface for API handling.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Customer id"
                },
                "group_id": {
                    "type": "integer",
                    "description": "Group id"
                },
                "default_billing": {
                    "type": "string",
                    "description": "Default billing address id"
                },
                "default_shipping": {
                    "type": "string",
                    "description": "Default shipping address id"
                },
                "confirmation": {
                    "type": "string",
                    "description": "Confirmation"
                },
                "created_at": {
                    "type": "string",
                    "description": "Created at time"
                },
                "updated_at": {
                    "type": "string",
                    "description": "Updated at time"
                },
                "created_in": {
                    "type": "string",
                    "description": "Created in area"
                },
                "dob": {
                    "type": "string",
                    "description": "In keeping with current security and privacy best practices, be sure you are aware of any potential legal and security risks associated with the storage of customers\u2019 full date of birth (month, day, year) along with other personal identifiers (e.g., full name) before collecting or processing such data."
                },
                "email": {
                    "type": "string",
                    "description": "Email address"
                },
                "firstname": {
                    "type": "string",
                    "description": "First name"
                },
                "lastname": {
                    "type": "string",
                    "description": "Last name"
                },
                "middlename": {
                    "type": "string",
                    "description": "Middle name"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix"
                },
                "suffix": {
                    "type": "string",
                    "description": "Suffix"
                },
                "gender": {
                    "type": "integer",
                    "description": "Gender"
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store id"
                },
                "taxvat": {
                    "type": "string",
                    "description": "Tax Vat"
                },
                "website_id": {
                    "type": "integer",
                    "description": "Website id"
                },
                "addresses": {
                    "type": "array",
                    "description": "Customer addresses.",
                    "items": {
                        "$ref": "#/definitions/customer-data-address-interface"
                    }
                },
                "disable_auto_group_change": {
                    "type": "integer",
                    "description": "Disable auto group change flag."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/customer-data-customer-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "email",
                "firstname",
                "lastname"
            ]
        },
        "customer-data-address-interface": {
            "type": "object",
            "description": "Customer address interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID"
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer ID"
                },
                "region": {
                    "$ref": "#/definitions/customer-data-region-interface"
                },
                "region_id": {
                    "type": "integer",
                    "description": "Region ID"
                },
                "country_id": {
                    "type": "string",
                    "description": "Country code in ISO_3166-2 format"
                },
                "street": {
                    "type": "array",
                    "description": "Street",
                    "items": {
                        "type": "string"
                    }
                },
                "company": {
                    "type": "string",
                    "description": "Company"
                },
                "telephone": {
                    "type": "string",
                    "description": "Telephone number"
                },
                "fax": {
                    "type": "string",
                    "description": "Fax number"
                },
                "postcode": {
                    "type": "string",
                    "description": "Postcode"
                },
                "city": {
                    "type": "string",
                    "description": "City name"
                },
                "firstname": {
                    "type": "string",
                    "description": "First name"
                },
                "lastname": {
                    "type": "string",
                    "description": "Last name"
                },
                "middlename": {
                    "type": "string",
                    "description": "Middle name"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix"
                },
                "suffix": {
                    "type": "string",
                    "description": "Suffix"
                },
                "vat_id": {
                    "type": "string",
                    "description": "Vat id"
                },
                "default_shipping": {
                    "type": "boolean",
                    "description": "If this address is default shipping address."
                },
                "default_billing": {
                    "type": "boolean",
                    "description": "If this address is default billing address"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/customer-data-address-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            }
        },
        "customer-data-region-interface": {
            "type": "object",
            "description": "Customer address region interface.",
            "properties": {
                "region_code": {
                    "type": "string",
                    "description": "Region code"
                },
                "region": {
                    "type": "string",
                    "description": "Region"
                },
                "region_id": {
                    "type": "integer",
                    "description": "Region id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/customer-data-region-extension-interface"
                }
            },
            "required": [
                "region_code",
                "region",
                "region_id"
            ]
        },
        "customer-data-region-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\RegionInterface"
        },
        "customer-data-address-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\AddressInterface"
        },
        "customer-data-customer-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\CustomerInterface",
            "properties": {
                "assistance_allowed": {
                    "type": "integer"
                },
                "is_subscribed": {
                    "type": "boolean"
                },
                "amazon_id": {
                    "type": "string"
                },
                "vertex_customer_code": {
                    "type": "string"
                },
                "vertex_customer_country": {
                    "type": "string"
                }
            }
        },
        "cms-data-page-interface": {
            "type": "object",
            "description": "CMS page interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier"
                },
                "title": {
                    "type": "string",
                    "description": "Title"
                },
                "page_layout": {
                    "type": "string",
                    "description": "Page layout"
                },
                "meta_title": {
                    "type": "string",
                    "description": "Meta title"
                },
                "meta_keywords": {
                    "type": "string",
                    "description": "Meta keywords"
                },
                "meta_description": {
                    "type": "string",
                    "description": "Meta description"
                },
                "content_heading": {
                    "type": "string",
                    "description": "Content heading"
                },
                "content": {
                    "type": "string",
                    "description": "Content"
                },
                "creation_time": {
                    "type": "string",
                    "description": "Creation time"
                },
                "update_time": {
                    "type": "string",
                    "description": "Update time"
                },
                "sort_order": {
                    "type": "string",
                    "description": "Sort order"
                },
                "layout_update_xml": {
                    "type": "string",
                    "description": "Layout update xml"
                },
                "custom_theme": {
                    "type": "string",
                    "description": "Custom theme"
                },
                "custom_root_template": {
                    "type": "string",
                    "description": "Custom root template"
                },
                "custom_layout_update_xml": {
                    "type": "string",
                    "description": "Custom layout update xml"
                },
                "custom_theme_from": {
                    "type": "string",
                    "description": "Custom theme from"
                },
                "custom_theme_to": {
                    "type": "string",
                    "description": "Custom theme to"
                },
                "active": {
                    "type": "boolean",
                    "description": "Active"
                }
            },
            "required": [
                "identifier"
            ]
        },
        "cms-data-block-interface": {
            "type": "object",
            "description": "CMS block interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier"
                },
                "title": {
                    "type": "string",
                    "description": "Title"
                },
                "content": {
                    "type": "string",
                    "description": "Content"
                },
                "creation_time": {
                    "type": "string",
                    "description": "Creation time"
                },
                "update_time": {
                    "type": "string",
                    "description": "Update time"
                },
                "active": {
                    "type": "boolean",
                    "description": "Active"
                }
            },
            "required": [
                "identifier"
            ]
        },
        "catalog-data-product-search-results-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Attributes list.",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "catalog-data-product-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id"
                },
                "sku": {
                    "type": "string",
                    "description": "Sku"
                },
                "name": {
                    "type": "string",
                    "description": "Name"
                },
                "attribute_set_id": {
                    "type": "integer",
                    "description": "Attribute set id"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "status": {
                    "type": "integer",
                    "description": "Status"
                },
                "visibility": {
                    "type": "integer",
                    "description": "Visibility"
                },
                "type_id": {
                    "type": "string",
                    "description": "Type id"
                },
                "created_at": {
                    "type": "string",
                    "description": "Created date"
                },
                "updated_at": {
                    "type": "string",
                    "description": "Updated date"
                },
                "weight": {
                    "type": "number",
                    "description": "Weight"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-extension-interface"
                },
                "product_links": {
                    "type": "array",
                    "description": "Product links info",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-link-interface"
                    }
                },
                "options": {
                    "type": "array",
                    "description": "List of product options",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-custom-option-interface"
                    }
                },
                "media_gallery_entries": {
                    "type": "array",
                    "description": "Media gallery entries",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-attribute-media-gallery-entry-interface"
                    }
                },
                "tier_prices": {
                    "type": "array",
                    "description": "List of product tier prices",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-tier-price-interface"
                    }
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "sku"
            ]
        },
        "catalog-data-product-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductInterface",
            "properties": {
                "website_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "category_links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/catalog-data-category-link-interface"
                    }
                },
                "stock_item": {
                    "$ref": "#/definitions/catalog-inventory-data-stock-item-interface"
                },
                "downloadable_product_links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/downloadable-data-link-interface"
                    }
                },
                "downloadable_product_samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/downloadable-data-sample-interface"
                    }
                },
                "bundle_product_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bundle-data-option-interface"
                    }
                },
                "configurable_product_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/configurable-product-data-option-interface"
                    }
                },
                "configurable_product_links": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "vertex_commodity_code": {
                    "$ref": "#/definitions/vertex-tax-data-commodity-code-interface"
                }
            }
        },
        "catalog-data-category-link-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "position": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "string",
                    "description": "Category id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-category-link-extension-interface"
                }
            },
            "required": [
                "category_id"
            ]
        },
        "catalog-data-category-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryLinkInterface"
        },
        "catalog-inventory-data-stock-item-interface": {
            "type": "object",
            "description": "Interface StockItem",
            "properties": {
                "item_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "stock_id": {
                    "type": "integer",
                    "description": "Stock identifier"
                },
                "qty": {
                    "type": "number"
                },
                "is_in_stock": {
                    "type": "boolean",
                    "description": "Stock Availability"
                },
                "is_qty_decimal": {
                    "type": "boolean"
                },
                "show_default_notification_message": {
                    "type": "boolean"
                },
                "use_config_min_qty": {
                    "type": "boolean"
                },
                "min_qty": {
                    "type": "number",
                    "description": "Minimal quantity available for item status in stock"
                },
                "use_config_min_sale_qty": {
                    "type": "integer"
                },
                "min_sale_qty": {
                    "type": "number",
                    "description": "Minimum Qty Allowed in Shopping Cart or NULL when there is no limitation"
                },
                "use_config_max_sale_qty": {
                    "type": "boolean"
                },
                "max_sale_qty": {
                    "type": "number",
                    "description": "Maximum Qty Allowed in Shopping Cart data wrapper"
                },
                "use_config_backorders": {
                    "type": "boolean"
                },
                "backorders": {
                    "type": "integer",
                    "description": "Backorders status"
                },
                "use_config_notify_stock_qty": {
                    "type": "boolean"
                },
                "notify_stock_qty": {
                    "type": "number",
                    "description": "Notify for Quantity Below data wrapper"
                },
                "use_config_qty_increments": {
                    "type": "boolean"
                },
                "qty_increments": {
                    "type": "number",
                    "description": "Quantity Increments data wrapper"
                },
                "use_config_enable_qty_inc": {
                    "type": "boolean"
                },
                "enable_qty_increments": {
                    "type": "boolean",
                    "description": "Whether Quantity Increments is enabled"
                },
                "use_config_manage_stock": {
                    "type": "boolean"
                },
                "manage_stock": {
                    "type": "boolean",
                    "description": "Can Manage Stock"
                },
                "low_stock_date": {
                    "type": "string"
                },
                "is_decimal_divided": {
                    "type": "boolean"
                },
                "stock_status_changed_auto": {
                    "type": "integer"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-inventory-data-stock-item-extension-interface"
                }
            },
            "required": [
                "qty",
                "is_in_stock",
                "is_qty_decimal",
                "show_default_notification_message",
                "use_config_min_qty",
                "min_qty",
                "use_config_min_sale_qty",
                "min_sale_qty",
                "use_config_max_sale_qty",
                "max_sale_qty",
                "use_config_backorders",
                "backorders",
                "use_config_notify_stock_qty",
                "notify_stock_qty",
                "use_config_qty_increments",
                "qty_increments",
                "use_config_enable_qty_inc",
                "enable_qty_increments",
                "use_config_manage_stock",
                "manage_stock",
                "low_stock_date",
                "is_decimal_divided",
                "stock_status_changed_auto"
            ]
        },
        "catalog-inventory-data-stock-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockItemInterface"
        },
        "downloadable-data-link-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Sample(or link) id"
                },
                "title": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "integer"
                },
                "is_shareable": {
                    "type": "integer",
                    "description": "Shareable status"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "number_of_downloads": {
                    "type": "integer",
                    "description": "Of downloads per user"
                },
                "link_type": {
                    "type": "string"
                },
                "link_file": {
                    "type": "string",
                    "description": "relative file path"
                },
                "link_file_content": {
                    "$ref": "#/definitions/downloadable-data-file-content-interface"
                },
                "link_url": {
                    "type": "string",
                    "description": "Link url or null when type is 'file'"
                },
                "sample_type": {
                    "type": "string"
                },
                "sample_file": {
                    "type": "string",
                    "description": "relative file path"
                },
                "sample_file_content": {
                    "$ref": "#/definitions/downloadable-data-file-content-interface"
                },
                "sample_url": {
                    "type": "string",
                    "description": "file URL"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/downloadable-data-link-extension-interface"
                }
            },
            "required": [
                "sort_order",
                "is_shareable",
                "price",
                "link_type",
                "sample_type"
            ]
        },
        "downloadable-data-file-content-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "file_data": {
                    "type": "string",
                    "description": "Data (base64 encoded content)"
                },
                "name": {
                    "type": "string",
                    "description": "File name"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/downloadable-data-file-content-extension-interface"
                }
            },
            "required": [
                "file_data",
                "name"
            ]
        },
        "downloadable-data-file-content-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\File\\ContentInterface"
        },
        "downloadable-data-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\LinkInterface"
        },
        "downloadable-data-sample-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Sample(or link) id"
                },
                "title": {
                    "type": "string",
                    "description": "Title"
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Order index for sample"
                },
                "sample_type": {
                    "type": "string"
                },
                "sample_file": {
                    "type": "string",
                    "description": "relative file path"
                },
                "sample_file_content": {
                    "$ref": "#/definitions/downloadable-data-file-content-interface"
                },
                "sample_url": {
                    "type": "string",
                    "description": "file URL"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/downloadable-data-sample-extension-interface"
                }
            },
            "required": [
                "title",
                "sort_order",
                "sample_type"
            ]
        },
        "downloadable-data-sample-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\SampleInterface"
        },
        "bundle-data-option-interface": {
            "type": "object",
            "description": "Interface OptionInterface",
            "properties": {
                "option_id": {
                    "type": "integer",
                    "description": "Option id"
                },
                "title": {
                    "type": "string",
                    "description": "Option title"
                },
                "required": {
                    "type": "boolean",
                    "description": "Is required option"
                },
                "type": {
                    "type": "string",
                    "description": "Input type"
                },
                "position": {
                    "type": "integer",
                    "description": "Option position"
                },
                "sku": {
                    "type": "string",
                    "description": "Product sku"
                },
                "product_links": {
                    "type": "array",
                    "description": "Product links",
                    "items": {
                        "$ref": "#/definitions/bundle-data-link-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/bundle-data-option-extension-interface"
                }
            }
        },
        "bundle-data-link-interface": {
            "type": "object",
            "description": "Interface LinkInterface",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The identifier"
                },
                "sku": {
                    "type": "string",
                    "description": "Linked product sku"
                },
                "option_id": {
                    "type": "integer",
                    "description": "Option id"
                },
                "qty": {
                    "type": "number",
                    "description": "Qty"
                },
                "position": {
                    "type": "integer",
                    "description": "Position"
                },
                "is_default": {
                    "type": "boolean",
                    "description": "Is default"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "price_type": {
                    "type": "integer",
                    "description": "Price type"
                },
                "can_change_quantity": {
                    "type": "integer",
                    "description": "Whether quantity could be changed"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/bundle-data-link-extension-interface"
                }
            },
            "required": [
                "is_default",
                "price",
                "price_type"
            ]
        },
        "bundle-data-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\LinkInterface"
        },
        "bundle-data-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\OptionInterface"
        },
        "configurable-product-data-option-interface": {
            "type": "object",
            "description": "Interface OptionInterface",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "attribute_id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "is_use_default": {
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/configurable-product-data-option-value-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/configurable-product-data-option-extension-interface"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "configurable-product-data-option-value-interface": {
            "type": "object",
            "description": "Interface OptionValueInterface",
            "properties": {
                "value_index": {
                    "type": "integer"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/configurable-product-data-option-value-extension-interface"
                }
            },
            "required": [
                "value_index"
            ]
        },
        "configurable-product-data-option-value-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\OptionValueInterface"
        },
        "configurable-product-data-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\OptionInterface"
        },
        "vertex-tax-data-commodity-code-interface": {
            "type": "object",
            "description": "Data model representing a Commmodity Code",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Commodity code"
                },
                "type": {
                    "type": "string",
                    "description": "Commodity code type"
                }
            }
        },
        "catalog-data-product-link-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "sku": {
                    "type": "string",
                    "description": "SKU"
                },
                "link_type": {
                    "type": "string",
                    "description": "Link type"
                },
                "linked_product_sku": {
                    "type": "string",
                    "description": "Linked product sku"
                },
                "linked_product_type": {
                    "type": "string",
                    "description": "Linked product type (simple, virtual, etc)"
                },
                "position": {
                    "type": "integer",
                    "description": "Linked item position"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-link-extension-interface"
                }
            },
            "required": [
                "sku",
                "link_type",
                "linked_product_sku",
                "linked_product_type",
                "position"
            ]
        },
        "catalog-data-product-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkInterface",
            "properties": {
                "qty": {
                    "type": "number"
                }
            }
        },
        "catalog-data-product-custom-option-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "product_sku": {
                    "type": "string",
                    "description": "Product SKU"
                },
                "option_id": {
                    "type": "integer",
                    "description": "Option id"
                },
                "title": {
                    "type": "string",
                    "description": "Option title"
                },
                "type": {
                    "type": "string",
                    "description": "Option type"
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Sort order"
                },
                "is_require": {
                    "type": "boolean",
                    "description": "Is require"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "price_type": {
                    "type": "string",
                    "description": "Price type"
                },
                "sku": {
                    "type": "string",
                    "description": "Sku"
                },
                "file_extension": {
                    "type": "string"
                },
                "max_characters": {
                    "type": "integer"
                },
                "image_size_x": {
                    "type": "integer"
                },
                "image_size_y": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-custom-option-values-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-custom-option-extension-interface"
                }
            },
            "required": [
                "product_sku",
                "title",
                "type",
                "sort_order",
                "is_require"
            ]
        },
        "catalog-data-product-custom-option-values-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Option title"
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Sort order"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "price_type": {
                    "type": "string",
                    "description": "Price type"
                },
                "sku": {
                    "type": "string",
                    "description": "Sku"
                },
                "option_type_id": {
                    "type": "integer",
                    "description": "Option type id"
                }
            },
            "required": [
                "title",
                "sort_order",
                "price",
                "price_type"
            ]
        },
        "catalog-data-product-custom-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductCustomOptionInterface",
            "properties": {
                "vertex_flex_field": {
                    "type": "string"
                }
            }
        },
        "catalog-data-product-attribute-media-gallery-entry-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Gallery entry ID"
                },
                "media_type": {
                    "type": "string",
                    "description": "Media type"
                },
                "label": {
                    "type": "string",
                    "description": "Gallery entry alternative text"
                },
                "position": {
                    "type": "integer",
                    "description": "Gallery entry position (sort order)"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "If gallery entry is hidden from product page"
                },
                "types": {
                    "type": "array",
                    "description": "Gallery entry image types (thumbnail, image, small_image etc)",
                    "items": {
                        "type": "string"
                    }
                },
                "file": {
                    "type": "string",
                    "description": "File path"
                },
                "content": {
                    "$ref": "#/definitions/framework-data-image-content-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-attribute-media-gallery-entry-extension-interface"
                }
            },
            "required": [
                "media_type",
                "label",
                "position",
                "disabled",
                "types"
            ]
        },
        "framework-data-image-content-interface": {
            "type": "object",
            "description": "Image Content data interface",
            "properties": {
                "base64_encoded_data": {
                    "type": "string",
                    "description": "Media data (base64 encoded content)"
                },
                "type": {
                    "type": "string",
                    "description": "MIME type"
                },
                "name": {
                    "type": "string",
                    "description": "Image name"
                }
            },
            "required": [
                "base64_encoded_data",
                "type",
                "name"
            ]
        },
        "catalog-data-product-attribute-media-gallery-entry-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductAttributeMediaGalleryEntryInterface",
            "properties": {
                "video_content": {
                    "$ref": "#/definitions/framework-data-video-content-interface"
                }
            }
        },
        "framework-data-video-content-interface": {
            "type": "object",
            "description": "Video Content data interface",
            "properties": {
                "media_type": {
                    "type": "string",
                    "description": "MIME type"
                },
                "video_provider": {
                    "type": "string",
                    "description": "Provider"
                },
                "video_url": {
                    "type": "string",
                    "description": "Video URL"
                },
                "video_title": {
                    "type": "string",
                    "description": "Title"
                },
                "video_description": {
                    "type": "string",
                    "description": "Video Description"
                },
                "video_metadata": {
                    "type": "string",
                    "description": "Metadata"
                }
            },
            "required": [
                "media_type",
                "video_provider",
                "video_url",
                "video_title",
                "video_description",
                "video_metadata"
            ]
        },
        "catalog-data-product-tier-price-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "customer_group_id": {
                    "type": "integer",
                    "description": "Customer group id"
                },
                "qty": {
                    "type": "number",
                    "description": "Tier qty"
                },
                "value": {
                    "type": "number",
                    "description": "Price value"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-tier-price-extension-interface"
                }
            },
            "required": [
                "customer_group_id",
                "qty",
                "value"
            ]
        },
        "catalog-data-product-tier-price-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductTierPriceInterface",
            "properties": {
                "percentage_value": {
                    "type": "number"
                },
                "website_id": {
                    "type": "integer"
                }
            }
        },
        "framework-search-criteria-interface": {
            "type": "object",
            "description": "Search criteria interface.",
            "properties": {
                "filter_groups": {
                    "type": "array",
                    "description": "A list of filter groups.",
                    "items": {
                        "$ref": "#/definitions/framework-search-filter-group"
                    }
                },
                "sort_orders": {
                    "type": "array",
                    "description": "Sort order.",
                    "items": {
                        "$ref": "#/definitions/framework-sort-order"
                    }
                },
                "page_size": {
                    "type": "integer",
                    "description": "Page size."
                },
                "current_page": {
                    "type": "integer",
                    "description": "Current page."
                }
            },
            "required": [
                "filter_groups"
            ]
        },
        "catalog-data-product-attribute-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/eav-data-attribute-extension-interface"
                },
                "is_wysiwyg_enabled": {
                    "type": "boolean",
                    "description": "WYSIWYG flag"
                },
                "is_html_allowed_on_front": {
                    "type": "boolean",
                    "description": "The HTML tags are allowed on the frontend"
                },
                "used_for_sort_by": {
                    "type": "boolean",
                    "description": "It is used for sorting in product listing"
                },
                "is_filterable": {
                    "type": "boolean",
                    "description": "It used in layered navigation"
                },
                "is_filterable_in_search": {
                    "type": "boolean",
                    "description": "It is used in search results layered navigation"
                },
                "is_used_in_grid": {
                    "type": "boolean",
                    "description": "It is used in catalog product grid"
                },
                "is_visible_in_grid": {
                    "type": "boolean",
                    "description": "It is visible in catalog product grid"
                },
                "is_filterable_in_grid": {
                    "type": "boolean",
                    "description": "It is filterable in catalog product grid"
                },
                "position": {
                    "type": "integer",
                    "description": "Position"
                },
                "apply_to": {
                    "type": "array",
                    "description": "Apply to value for the element",
                    "items": {
                        "type": "string"
                    }
                },
                "is_searchable": {
                    "type": "string",
                    "description": "The attribute can be used in Quick Search"
                },
                "is_visible_in_advanced_search": {
                    "type": "string",
                    "description": "The attribute can be used in Advanced Search"
                },
                "is_comparable": {
                    "type": "string",
                    "description": "The attribute can be compared on the frontend"
                },
                "is_used_for_promo_rules": {
                    "type": "string",
                    "description": "The attribute can be used for promo rules"
                },
                "is_visible_on_front": {
                    "type": "string",
                    "description": "The attribute is visible on the frontend"
                },
                "used_in_product_listing": {
                    "type": "string",
                    "description": "The attribute can be used in product listing"
                },
                "is_visible": {
                    "type": "boolean",
                    "description": "Attribute is visible on frontend."
                },
                "scope": {
                    "type": "string",
                    "description": "Attribute scope"
                },
                "attribute_id": {
                    "type": "integer",
                    "description": "Id of the attribute."
                },
                "attribute_code": {
                    "type": "string",
                    "description": "Code of the attribute."
                },
                "frontend_input": {
                    "type": "string",
                    "description": "HTML for input element."
                },
                "entity_type_id": {
                    "type": "string",
                    "description": "Entity type id"
                },
                "is_required": {
                    "type": "boolean",
                    "description": "Attribute is required."
                },
                "options": {
                    "type": "array",
                    "description": "Options of the attribute (key => value pairs for select)",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-option-interface"
                    }
                },
                "is_user_defined": {
                    "type": "boolean",
                    "description": "Current attribute has been defined by a user."
                },
                "default_frontend_label": {
                    "type": "string",
                    "description": "Frontend label for default store"
                },
                "frontend_labels": {
                    "type": "array",
                    "description": "Frontend label for each store",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-frontend-label-interface"
                    }
                },
                "note": {
                    "type": "string",
                    "description": "The note attribute for the element."
                },
                "backend_type": {
                    "type": "string",
                    "description": "Backend type."
                },
                "backend_model": {
                    "type": "string",
                    "description": "Backend model"
                },
                "source_model": {
                    "type": "string",
                    "description": "Source model"
                },
                "default_value": {
                    "type": "string",
                    "description": "Default value for the element."
                },
                "is_unique": {
                    "type": "string",
                    "description": "This is a unique attribute"
                },
                "frontend_class": {
                    "type": "string",
                    "description": "Frontend class of attribute"
                },
                "validation_rules": {
                    "type": "array",
                    "description": "Validation rules.",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-validation-rule-interface"
                    }
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "attribute_code",
                "frontend_input",
                "entity_type_id",
                "is_required",
                "frontend_labels"
            ]
        },
        "eav-data-attribute-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeInterface",
            "properties": {
                "is_pagebuilder_enabled": {
                    "type": "boolean"
                }
            }
        },
        "eav-data-attribute-option-interface": {
            "type": "object",
            "description": "Created from:",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Option label"
                },
                "value": {
                    "type": "string",
                    "description": "Option value"
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Option order"
                },
                "is_default": {
                    "type": "boolean",
                    "description": "Default"
                },
                "store_labels": {
                    "type": "array",
                    "description": "Option label for store scopes",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-option-label-interface"
                    }
                }
            },
            "required": [
                "label",
                "value"
            ]
        },
        "eav-data-attribute-option-label-interface": {
            "type": "object",
            "description": "Interface AttributeOptionLabelInterface",
            "properties": {
                "store_id": {
                    "type": "integer",
                    "description": "Store id"
                },
                "label": {
                    "type": "string",
                    "description": "Option label"
                }
            }
        },
        "eav-data-attribute-frontend-label-interface": {
            "type": "object",
            "description": "Interface AttributeFrontendLabelInterface",
            "properties": {
                "store_id": {
                    "type": "integer",
                    "description": "Store id"
                },
                "label": {
                    "type": "string",
                    "description": "Option label"
                }
            }
        },
        "eav-data-attribute-validation-rule-interface": {
            "type": "object",
            "description": "Interface AttributeValidationRuleInterface",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Object key"
                },
                "value": {
                    "type": "string",
                    "description": "Object value"
                }
            },
            "required": [
                "key",
                "value"
            ]
        },
        "catalog-data-product-type-interface": {
            "type": "object",
            "description": "Product type details",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Product type code"
                },
                "label": {
                    "type": "string",
                    "description": "Product type label"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-type-extension-interface"
                }
            },
            "required": [
                "name",
                "label"
            ]
        },
        "catalog-data-product-type-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductTypeInterface"
        },
        "eav-data-attribute-set-search-results-interface": {
            "type": "object",
            "description": "Interface AttributeSetSearchResultsInterface",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Attribute sets list.",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-set-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "eav-data-attribute-set-interface": {
            "type": "object",
            "description": "Interface AttributeSetInterface",
            "properties": {
                "attribute_set_id": {
                    "type": "integer",
                    "description": "Attribute set ID"
                },
                "attribute_set_name": {
                    "type": "string",
                    "description": "Attribute set name"
                },
                "sort_order": {
                    "type": "integer",
                    "description": "Attribute set sort order index"
                },
                "entity_type_id": {
                    "type": "integer",
                    "description": "Attribute set entity type id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/eav-data-attribute-set-extension-interface"
                }
            },
            "required": [
                "attribute_set_name",
                "sort_order"
            ]
        },
        "eav-data-attribute-set-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeSetInterface"
        },
        "eav-data-attribute-group-search-results-interface": {
            "type": "object",
            "description": "Interface AttributeGroupSearchResultsInterface",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Attribute sets list.",
                    "items": {
                        "$ref": "#/definitions/eav-data-attribute-group-interface"
                    }
                },
                "search_criteria": {
                    "$ref": "#/definitions/framework-search-criteria-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_criteria",
                "total_count"
            ]
        },
        "eav-data-attribute-group-interface": {
            "type": "object",
            "description": "Interface AttributeGroupInterface",
            "properties": {
                "attribute_group_id": {
                    "type": "string",
                    "description": "Id"
                },
                "attribute_group_name": {
                    "type": "string",
                    "description": "Name"
                },
                "attribute_set_id": {
                    "type": "integer",
                    "description": "Attribute set id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/eav-data-attribute-group-extension-interface"
                }
            }
        },
        "eav-data-attribute-group-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeGroupInterface",
            "properties": {
                "attribute_group_code": {
                    "type": "string"
                },
                "sort_order": {
                    "type": "string"
                }
            }
        },
        "catalog-data-category-interface": {
            "type": "object",
            "description": "Category data interface.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Category id."
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent category ID"
                },
                "name": {
                    "type": "string",
                    "description": "Category name"
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Whether category is active"
                },
                "position": {
                    "type": "integer",
                    "description": "Category position"
                },
                "level": {
                    "type": "integer",
                    "description": "Category level"
                },
                "children": {
                    "type": "string",
                    "description": "Children ids comma separated."
                },
                "created_at": {
                    "type": "string",
                    "description": "Category creation date and time."
                },
                "updated_at": {
                    "type": "string",
                    "description": "Category last update date and time."
                },
                "path": {
                    "type": "string",
                    "description": "Category full path."
                },
                "available_sort_by": {
                    "type": "array",
                    "description": "Available sort by for category.",
                    "items": {
                        "type": "string"
                    }
                },
                "include_in_menu": {
                    "type": "boolean",
                    "description": "Category is included in menu."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-category-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            }
        },
        "catalog-data-category-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryInterface"
        },
        "catalog-data-category-tree-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "parent_id": {
                    "type": "integer",
                    "description": "Parent category ID"
                },
                "name": {
                    "type": "string",
                    "description": "Category name"
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Whether category is active"
                },
                "position": {
                    "type": "integer",
                    "description": "Category position"
                },
                "level": {
                    "type": "integer",
                    "description": "Category level"
                },
                "product_count": {
                    "type": "integer",
                    "description": "Product count"
                },
                "children_data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/catalog-data-category-tree-interface"
                    }
                }
            },
            "required": [
                "parent_id",
                "name",
                "is_active",
                "position",
                "level",
                "product_count",
                "children_data"
            ]
        },
        "catalog-data-product-link-type-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "Link type code"
                },
                "name": {
                    "type": "string",
                    "description": "Link type name"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-link-type-extension-interface"
                }
            },
            "required": [
                "code",
                "name"
            ]
        },
        "catalog-data-product-link-type-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkTypeInterface"
        },
        "catalog-data-product-link-attribute-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Attribute code"
                },
                "type": {
                    "type": "string",
                    "description": "Attribute type"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-link-attribute-extension-interface"
                }
            },
            "required": [
                "code",
                "type"
            ]
        },
        "catalog-data-product-link-attribute-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkAttributeInterface"
        },
        "catalog-data-category-product-link-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "sku": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "string",
                    "description": "Category id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-category-product-link-extension-interface"
                }
            },
            "required": [
                "category_id"
            ]
        },
        "catalog-data-category-product-link-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryProductLinkInterface"
        },
        "catalog-data-product-render-search-results-interface": {
            "type": "object",
            "description": "Dto that holds render information about products",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of products rendered information",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-render-interface"
                    }
                }
            },
            "required": [
                "items"
            ]
        },
        "catalog-data-product-render-interface": {
            "type": "object",
            "description": "Represents Data Object which holds enough information to render product This information is put into part as Add To Cart or Add to Compare Data or Price Data",
            "properties": {
                "add_to_cart_button": {
                    "$ref": "#/definitions/catalog-data-product-render-button-interface"
                },
                "add_to_compare_button": {
                    "$ref": "#/definitions/catalog-data-product-render-button-interface"
                },
                "price_info": {
                    "$ref": "#/definitions/catalog-data-product-render-price-info-interface"
                },
                "images": {
                    "type": "array",
                    "description": "Enough information, that needed to render image on front",
                    "items": {
                        "$ref": "#/definitions/catalog-data-product-render-image-interface"
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Product url"
                },
                "id": {
                    "type": "integer",
                    "description": "Product identifier"
                },
                "name": {
                    "type": "string",
                    "description": "Product name"
                },
                "type": {
                    "type": "string",
                    "description": "Product type. Such as bundle, grouped, simple, etc..."
                },
                "is_salable": {
                    "type": "string",
                    "description": "Information about product saleability (In Stock)"
                },
                "store_id": {
                    "type": "integer",
                    "description": "Information about current store id or requested store id"
                },
                "currency_code": {
                    "type": "string",
                    "description": "Current or desired currency code to product"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-render-extension-interface"
                }
            },
            "required": [
                "add_to_cart_button",
                "add_to_compare_button",
                "price_info",
                "images",
                "url",
                "id",
                "name",
                "type",
                "is_salable",
                "store_id",
                "currency_code",
                "extension_attributes"
            ]
        },
        "catalog-data-product-render-button-interface": {
            "type": "object",
            "description": "Button interface. This interface represents all manner of product buttons: add to cart, add to compare, etc... The buttons describes by this interface should have interaction with backend",
            "properties": {
                "post_data": {
                    "type": "string",
                    "description": "Post data"
                },
                "url": {
                    "type": "string",
                    "description": "Url, needed to add product to cart"
                },
                "required_options": {
                    "type": "boolean",
                    "description": "Flag whether a product has options or not"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-render-button-extension-interface"
                }
            },
            "required": [
                "post_data",
                "url",
                "required_options"
            ]
        },
        "catalog-data-product-render-button-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\ButtonInterface"
        },
        "catalog-data-product-render-price-info-interface": {
            "type": "object",
            "description": "Price interface.",
            "properties": {
                "final_price": {
                    "type": "number",
                    "description": "Final price"
                },
                "max_price": {
                    "type": "number",
                    "description": "Max price of a product"
                },
                "max_regular_price": {
                    "type": "number",
                    "description": "Max regular price"
                },
                "minimal_regular_price": {
                    "type": "number",
                    "description": "Minimal regular price"
                },
                "special_price": {
                    "type": "number",
                    "description": "Special price"
                },
                "minimal_price": {
                    "type": "number",
                    "description": "Minimal price"
                },
                "regular_price": {
                    "type": "number",
                    "description": "Regular price"
                },
                "formatted_prices": {
                    "$ref": "#/definitions/catalog-data-product-render-formatted-price-info-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-render-price-info-extension-interface"
                }
            },
            "required": [
                "final_price",
                "max_price",
                "max_regular_price",
                "minimal_regular_price",
                "special_price",
                "minimal_price",
                "regular_price",
                "formatted_prices"
            ]
        },
        "catalog-data-product-render-formatted-price-info-interface": {
            "type": "object",
            "description": "Formatted Price interface. Aggregate formatted html with price representations. E.g.: <span class=\"price\">$9.00</span> Consider currency, rounding and html",
            "properties": {
                "final_price": {
                    "type": "string",
                    "description": "Html with final price"
                },
                "max_price": {
                    "type": "string",
                    "description": "Max price of a product"
                },
                "minimal_price": {
                    "type": "string",
                    "description": "The minimal price of the product or variation"
                },
                "max_regular_price": {
                    "type": "string",
                    "description": "Max regular price"
                },
                "minimal_regular_price": {
                    "type": "string",
                    "description": "Minimal regular price"
                },
                "special_price": {
                    "type": "string",
                    "description": "Special price"
                },
                "regular_price": {
                    "type": "string",
                    "description": "Price - is price of product without discounts and special price with taxes and fixed product tax"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-render-formatted-price-info-extension-interface"
                }
            },
            "required": [
                "final_price",
                "max_price",
                "minimal_price",
                "max_regular_price",
                "minimal_regular_price",
                "special_price",
                "regular_price"
            ]
        },
        "catalog-data-product-render-formatted-price-info-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\FormattedPriceInfoInterface"
        },
        "catalog-data-product-render-price-info-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\PriceInfoInterface",
            "properties": {
                "msrp": {
                    "$ref": "#/definitions/msrp-data-product-render-msrp-price-info-interface"
                },
                "tax_adjustments": {
                    "$ref": "#/definitions/catalog-data-product-render-price-info-interface"
                },
                "weee_attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/weee-data-product-render-weee-adjustment-attribute-interface"
                    }
                },
                "weee_adjustment": {
                    "type": "string"
                }
            }
        },
        "msrp-data-product-render-msrp-price-info-interface": {
            "type": "object",
            "description": "Price interface.",
            "properties": {
                "msrp_price": {
                    "type": "string"
                },
                "is_applicable": {
                    "type": "string"
                },
                "is_shown_price_on_gesture": {
                    "type": "string"
                },
                "msrp_message": {
                    "type": "string"
                },
                "explanation_message": {
                    "type": "string"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/msrp-data-product-render-msrp-price-info-extension-interface"
                }
            },
            "required": [
                "msrp_price",
                "is_applicable",
                "is_shown_price_on_gesture",
                "msrp_message",
                "explanation_message"
            ]
        },
        "msrp-data-product-render-msrp-price-info-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Msrp\\Api\\Data\\ProductRender\\MsrpPriceInfoInterface"
        },
        "weee-data-product-render-weee-adjustment-attribute-interface": {
            "type": "object",
            "description": "List of all weee attributes, their amounts, etc.., that product has",
            "properties": {
                "amount": {
                    "type": "string",
                    "description": "Weee attribute amount"
                },
                "tax_amount": {
                    "type": "string",
                    "description": "Tax which is calculated to fixed product tax attribute"
                },
                "tax_amount_incl_tax": {
                    "type": "string",
                    "description": "Tax amount of weee attribute"
                },
                "amount_excl_tax": {
                    "type": "string",
                    "description": "Product amount exclude tax"
                },
                "attribute_code": {
                    "type": "string",
                    "description": "Weee attribute code"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/weee-data-product-render-weee-adjustment-attribute-extension-interface"
                }
            },
            "required": [
                "amount",
                "tax_amount",
                "tax_amount_incl_tax",
                "amount_excl_tax",
                "attribute_code",
                "extension_attributes"
            ]
        },
        "weee-data-product-render-weee-adjustment-attribute-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Weee\\Api\\Data\\ProductRender\\WeeeAdjustmentAttributeInterface"
        },
        "catalog-data-product-render-image-interface": {
            "type": "object",
            "description": "Product Render image interface. Represents physical characteristics of image, that can be used in product listing or product view",
            "properties": {
                "url": {
                    "type": "string",
                    "description": "Image url"
                },
                "code": {
                    "type": "string",
                    "description": "Image code"
                },
                "height": {
                    "type": "number",
                    "description": "Image height"
                },
                "width": {
                    "type": "number",
                    "description": "Image width in px"
                },
                "label": {
                    "type": "string",
                    "description": "Image label"
                },
                "resized_width": {
                    "type": "number",
                    "description": "Resize width"
                },
                "resized_height": {
                    "type": "number",
                    "description": "Resize height"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-product-render-image-extension-interface"
                }
            },
            "required": [
                "url",
                "code",
                "height",
                "width",
                "label",
                "resized_width",
                "resized_height"
            ]
        },
        "catalog-data-product-render-image-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\ImageInterface"
        },
        "catalog-data-product-render-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRenderInterface",
            "properties": {
                "review_html": {
                    "type": "string"
                },
                "wishlist_button": {
                    "$ref": "#/definitions/catalog-data-product-render-button-interface"
                },
                "ddg_brand": {
                    "type": "string"
                },
                "ddg_description": {
                    "type": "string"
                },
                "ddg_sku": {
                    "type": "string"
                },
                "ddg_image": {
                    "type": "string"
                },
                "ddg_categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "catalog-inventory-data-stock-status-interface": {
            "type": "object",
            "description": "Interface StockStatusInterface",
            "properties": {
                "product_id": {
                    "type": "integer"
                },
                "stock_id": {
                    "type": "integer"
                },
                "qty": {
                    "type": "integer"
                },
                "stock_status": {
                    "type": "integer"
                },
                "stock_item": {
                    "$ref": "#/definitions/catalog-inventory-data-stock-item-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-inventory-data-stock-status-extension-interface"
                }
            },
            "required": [
                "product_id",
                "stock_id",
                "qty",
                "stock_status",
                "stock_item"
            ]
        },
        "catalog-inventory-data-stock-status-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockStatusInterface"
        },
        "quote-data-cart-interface": {
            "type": "object",
            "description": "Interface CartInterface",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Cart/quote ID."
                },
                "created_at": {
                    "type": "string",
                    "description": "Cart creation date and time. Otherwise, null."
                },
                "updated_at": {
                    "type": "string",
                    "description": "Cart last update date and time. Otherwise, null."
                },
                "converted_at": {
                    "type": "string",
                    "description": "Cart conversion date and time. Otherwise, null."
                },
                "is_active": {
                    "type": "boolean",
                    "description": "Active status flag value. Otherwise, null."
                },
                "is_virtual": {
                    "type": "boolean",
                    "description": "Virtual flag value. Otherwise, null."
                },
                "items": {
                    "type": "array",
                    "description": "Array of items. Otherwise, null.",
                    "items": {
                        "$ref": "#/definitions/quote-data-cart-item-interface"
                    }
                },
                "items_count": {
                    "type": "integer",
                    "description": "Number of different items or products in the cart. Otherwise, null."
                },
                "items_qty": {
                    "type": "number",
                    "description": "Total quantity of all cart items. Otherwise, null."
                },
                "customer": {
                    "$ref": "#/definitions/customer-data-customer-interface"
                },
                "billing_address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "reserved_order_id": {
                    "type": "string",
                    "description": "Reserved order ID. Otherwise, null."
                },
                "orig_order_id": {
                    "type": "integer",
                    "description": "Original order ID. Otherwise, null."
                },
                "currency": {
                    "$ref": "#/definitions/quote-data-currency-interface"
                },
                "customer_is_guest": {
                    "type": "boolean",
                    "description": "For guest customers, false for logged in customers"
                },
                "customer_note": {
                    "type": "string",
                    "description": "Notice text"
                },
                "customer_note_notify": {
                    "type": "boolean",
                    "description": "Customer notification flag"
                },
                "customer_tax_class_id": {
                    "type": "integer",
                    "description": "Customer tax class ID."
                },
                "store_id": {
                    "type": "integer",
                    "description": "Store identifier"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-cart-extension-interface"
                }
            },
            "required": [
                "id",
                "customer",
                "store_id"
            ]
        },
        "quote-data-cart-item-interface": {
            "type": "object",
            "description": "Interface CartItemInterface",
            "properties": {
                "item_id": {
                    "type": "integer",
                    "description": "Item ID. Otherwise, null."
                },
                "sku": {
                    "type": "string",
                    "description": "Product SKU. Otherwise, null."
                },
                "qty": {
                    "type": "number",
                    "description": "Product quantity."
                },
                "name": {
                    "type": "string",
                    "description": "Product name. Otherwise, null."
                },
                "price": {
                    "type": "number",
                    "description": "Product price. Otherwise, null."
                },
                "product_type": {
                    "type": "string",
                    "description": "Product type. Otherwise, null."
                },
                "quote_id": {
                    "type": "string",
                    "description": "Quote id."
                },
                "product_option": {
                    "$ref": "#/definitions/quote-data-product-option-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-cart-item-extension-interface"
                }
            },
            "required": [
                "qty",
                "quote_id"
            ]
        },
        "quote-data-product-option-interface": {
            "type": "object",
            "description": "Product option interface",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-product-option-extension-interface"
                }
            }
        },
        "quote-data-product-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ProductOptionInterface",
            "properties": {
                "custom_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/catalog-data-custom-option-interface"
                    }
                },
                "downloadable_option": {
                    "$ref": "#/definitions/downloadable-data-downloadable-option-interface"
                },
                "bundle_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bundle-data-bundle-option-interface"
                    }
                },
                "grouped_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grouped-product-data-grouped-options-interface"
                    }
                },
                "configurable_item_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/configurable-product-data-configurable-item-option-value-interface"
                    }
                }
            }
        },
        "catalog-data-custom-option-interface": {
            "type": "object",
            "description": "Interface CustomOptionInterface",
            "properties": {
                "option_id": {
                    "type": "string",
                    "description": "Option id"
                },
                "option_value": {
                    "type": "string",
                    "description": "Option value"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/catalog-data-custom-option-extension-interface"
                }
            },
            "required": [
                "option_id",
                "option_value"
            ]
        },
        "catalog-data-custom-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CustomOptionInterface",
            "properties": {
                "file_info": {
                    "$ref": "#/definitions/framework-data-image-content-interface"
                }
            }
        },
        "downloadable-data-downloadable-option-interface": {
            "type": "object",
            "description": "Downloadable Option",
            "properties": {
                "downloadable_links": {
                    "type": "array",
                    "description": "The list of downloadable links",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "required": [
                "downloadable_links"
            ]
        },
        "bundle-data-bundle-option-interface": {
            "type": "object",
            "description": "Interface BundleOptionInterface",
            "properties": {
                "option_id": {
                    "type": "integer",
                    "description": "Bundle option id."
                },
                "option_qty": {
                    "type": "integer",
                    "description": "Bundle option quantity."
                },
                "option_selections": {
                    "type": "array",
                    "description": "Bundle option selection ids.",
                    "items": {
                        "type": "integer"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/bundle-data-bundle-option-extension-interface"
                }
            },
            "required": [
                "option_id",
                "option_qty",
                "option_selections"
            ]
        },
        "bundle-data-bundle-option-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\BundleOptionInterface"
        },
        "grouped-product-data-grouped-options-interface": {
            "type": "object",
            "description": "Represents `product item id with qty` of a grouped product.",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Associated product id"
                },
                "qty": {
                    "type": "integer",
                    "description": "Associated product qty"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/grouped-product-data-grouped-options-extension-interface"
                }
            }
        },
        "grouped-product-data-grouped-options-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\GroupedProduct\\Api\\Data\\GroupedOptionsInterface"
        },
        "configurable-product-data-configurable-item-option-value-interface": {
            "type": "object",
            "description": "Interface ConfigurableItemOptionValueInterface",
            "properties": {
                "option_id": {
                    "type": "string",
                    "description": "Option SKU"
                },
                "option_value": {
                    "type": "integer",
                    "description": "Item id"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/configurable-product-data-configurable-item-option-value-extension-interface"
                }
            },
            "required": [
                "option_id"
            ]
        },
        "configurable-product-data-configurable-item-option-value-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\ConfigurableItemOptionValueInterface"
        },
        "quote-data-cart-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartItemInterface",
            "properties": {
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sales-rule-data-rule-discount-interface"
                    }
                }
            }
        },
        "sales-rule-data-rule-discount-interface": {
            "type": "object",
            "description": "Rule discount Interface",
            "properties": {
                "discount_data": {
                    "$ref": "#/definitions/sales-rule-data-discount-data-interface"
                },
                "rule_label": {
                    "type": "string",
                    "description": "Rule Label"
                },
                "rule_id": {
                    "type": "integer",
                    "description": "Rule ID"
                }
            },
            "required": [
                "discount_data",
                "rule_label",
                "rule_id"
            ]
        },
        "sales-rule-data-discount-data-interface": {
            "type": "object",
            "description": "Discount Data Interface",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "Amount"
                },
                "base_amount": {
                    "type": "number",
                    "description": "Base Amount"
                },
                "original_amount": {
                    "type": "number",
                    "description": "Original Amount"
                },
                "base_original_amount": {
                    "type": "number",
                    "description": "Base Original Amount"
                }
            },
            "required": [
                "amount",
                "base_amount",
                "original_amount",
                "base_original_amount"
            ]
        },
        "quote-data-address-interface": {
            "type": "object",
            "description": "Interface AddressInterface",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Id"
                },
                "region": {
                    "type": "string",
                    "description": "Region name"
                },
                "region_id": {
                    "type": "integer",
                    "description": "Region id"
                },
                "region_code": {
                    "type": "string",
                    "description": "Region code"
                },
                "country_id": {
                    "type": "string",
                    "description": "Country id"
                },
                "street": {
                    "type": "array",
                    "description": "Street",
                    "items": {
                        "type": "string"
                    }
                },
                "company": {
                    "type": "string",
                    "description": "Company"
                },
                "telephone": {
                    "type": "string",
                    "description": "Telephone number"
                },
                "fax": {
                    "type": "string",
                    "description": "Fax number"
                },
                "postcode": {
                    "type": "string",
                    "description": "Postcode"
                },
                "city": {
                    "type": "string",
                    "description": "City name"
                },
                "firstname": {
                    "type": "string",
                    "description": "First name"
                },
                "lastname": {
                    "type": "string",
                    "description": "Last name"
                },
                "middlename": {
                    "type": "string",
                    "description": "Middle name"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix"
                },
                "suffix": {
                    "type": "string",
                    "description": "Suffix"
                },
                "vat_id": {
                    "type": "string",
                    "description": "Vat id"
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer id"
                },
                "email": {
                    "type": "string",
                    "description": "Billing/shipping email"
                },
                "same_as_billing": {
                    "type": "integer",
                    "description": "Same as billing flag"
                },
                "customer_address_id": {
                    "type": "integer",
                    "description": "Customer address id"
                },
                "save_in_address_book": {
                    "type": "integer",
                    "description": "Save in address book flag"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-address-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "region",
                "region_id",
                "region_code",
                "country_id",
                "street",
                "telephone",
                "postcode",
                "city",
                "firstname",
                "lastname",
                "email"
            ]
        },
        "quote-data-address-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\AddressInterface",
            "properties": {
                "pickup_location_code": {
                    "type": "string"
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sales-rule-data-rule-discount-interface"
                    }
                }
            }
        },
        "quote-data-currency-interface": {
            "type": "object",
            "description": "Interface CurrencyInterface",
            "properties": {
                "global_currency_code": {
                    "type": "string",
                    "description": "Global currency code"
                },
                "base_currency_code": {
                    "type": "string",
                    "description": "Base currency code"
                },
                "store_currency_code": {
                    "type": "string",
                    "description": "Store currency code"
                },
                "quote_currency_code": {
                    "type": "string",
                    "description": "Quote currency code"
                },
                "store_to_base_rate": {
                    "type": "number",
                    "description": "Store currency to base currency rate"
                },
                "store_to_quote_rate": {
                    "type": "number",
                    "description": "Store currency to quote currency rate"
                },
                "base_to_global_rate": {
                    "type": "number",
                    "description": "Base currency to global currency rate"
                },
                "base_to_quote_rate": {
                    "type": "number",
                    "description": "Base currency to quote currency rate"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-currency-extension-interface"
                }
            }
        },
        "quote-data-currency-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CurrencyInterface"
        },
        "quote-data-cart-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartInterface",
            "properties": {
                "shipping_assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/quote-data-shipping-assignment-interface"
                    }
                },
                "amazon_order_reference_id": {
                    "$ref": "#/definitions/amazon-payment-data-quote-link-interface"
                }
            }
        },
        "quote-data-shipping-assignment-interface": {
            "type": "object",
            "description": "Interface ShippingAssignmentInterface",
            "properties": {
                "shipping": {
                    "$ref": "#/definitions/quote-data-shipping-interface"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/quote-data-cart-item-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-shipping-assignment-extension-interface"
                }
            },
            "required": [
                "shipping",
                "items"
            ]
        },
        "quote-data-shipping-interface": {
            "type": "object",
            "description": "Interface ShippingInterface",
            "properties": {
                "address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "method": {
                    "type": "string",
                    "description": "Shipping method"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-shipping-extension-interface"
                }
            },
            "required": [
                "address",
                "method"
            ]
        },
        "quote-data-shipping-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingInterface"
        },
        "quote-data-shipping-assignment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingAssignmentInterface"
        },
        "amazon-payment-data-quote-link-interface": {
            "type": "object",
            "description": "",
            "properties": {
                "id": {
                    "type": "string"
                },
                "amazon_order_reference_id": {
                    "type": "string",
                    "description": "Amazon order reference id"
                },
                "quote_id": {
                    "type": "integer",
                    "description": "Quote id"
                },
                "sandbox_simulation_reference": {
                    "type": "string",
                    "description": "Sandbox simulation reference"
                },
                "confirmed": {
                    "type": "boolean",
                    "description": "Quote confirmed with amazon"
                }
            },
            "required": [
                "id",
                "amazon_order_reference_id",
                "quote_id",
                "sandbox_simulation_reference",
                "confirmed"
            ]
        },
        "quote-data-payment-interface": {
            "type": "object",
            "description": "Interface PaymentInterface",
            "properties": {
                "po_number": {
                    "type": "string",
                    "description": "Purchase order number"
                },
                "method": {
                    "type": "string",
                    "description": "Payment method code"
                },
                "additional_data": {
                    "type": "array",
                    "description": "Payment additional details",
                    "items": {
                        "type": "string"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-payment-extension-interface"
                }
            },
            "required": [
                "method"
            ]
        },
        "quote-data-payment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\PaymentInterface",
            "properties": {
                "agreement_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "quote-data-shipping-method-interface": {
            "type": "object",
            "description": "Interface ShippingMethodInterface",
            "properties": {
                "carrier_code": {
                    "type": "string",
                    "description": "Shipping carrier code."
                },
                "method_code": {
                    "type": "string",
                    "description": "Shipping method code."
                },
                "carrier_title": {
                    "type": "string",
                    "description": "Shipping carrier title. Otherwise, null."
                },
                "method_title": {
                    "type": "string",
                    "description": "Shipping method title. Otherwise, null."
                },
                "amount": {
                    "type": "number",
                    "description": "Shipping amount in store currency."
                },
                "base_amount": {
                    "type": "number",
                    "description": "Shipping amount in base currency."
                },
                "available": {
                    "type": "boolean",
                    "description": "The value of the availability flag for the current shipping method."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-shipping-method-extension-interface"
                },
                "error_message": {
                    "type": "string",
                    "description": "Shipping Error message."
                },
                "price_excl_tax": {
                    "type": "number",
                    "description": "Shipping price excl tax."
                },
                "price_incl_tax": {
                    "type": "number",
                    "description": "Shipping price incl tax."
                }
            },
            "required": [
                "carrier_code",
                "method_code",
                "amount",
                "base_amount",
                "available",
                "error_message",
                "price_excl_tax",
                "price_incl_tax"
            ]
        },
        "quote-data-shipping-method-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingMethodInterface"
        },
        "quote-data-payment-method-interface": {
            "type": "object",
            "description": "Interface PaymentMethodInterface",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Payment method code"
                },
                "title": {
                    "type": "string",
                    "description": "Payment method title"
                }
            },
            "required": [
                "code",
                "title"
            ]
        },
        "quote-data-totals-additional-data-interface": {
            "type": "object",
            "description": "Additional data for totals collection.",
            "properties": {
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-totals-additional-data-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            }
        },
        "quote-data-totals-additional-data-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsAdditionalDataInterface",
            "properties": {
                "gift_messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gift-message-data-message-interface"
                    }
                }
            }
        },
        "gift-message-data-message-interface": {
            "type": "object",
            "description": "Interface MessageInterface",
            "properties": {
                "gift_message_id": {
                    "type": "integer",
                    "description": "Gift message ID. Otherwise, null."
                },
                "customer_id": {
                    "type": "integer",
                    "description": "Customer ID. Otherwise, null."
                },
                "sender": {
                    "type": "string",
                    "description": "Sender name."
                },
                "recipient": {
                    "type": "string",
                    "description": "Recipient name."
                },
                "message": {
                    "type": "string",
                    "description": "Message text."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/gift-message-data-message-extension-interface"
                }
            },
            "required": [
                "sender",
                "recipient",
                "message"
            ]
        },
        "gift-message-data-message-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\GiftMessage\\Api\\Data\\MessageInterface",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                }
            }
        },
        "quote-data-totals-interface": {
            "type": "object",
            "description": "Interface TotalsInterface",
            "properties": {
                "grand_total": {
                    "type": "number",
                    "description": "Grand total in quote currency"
                },
                "base_grand_total": {
                    "type": "number",
                    "description": "Grand total in base currency"
                },
                "subtotal": {
                    "type": "number",
                    "description": "Subtotal in quote currency"
                },
                "base_subtotal": {
                    "type": "number",
                    "description": "Subtotal in base currency"
                },
                "discount_amount": {
                    "type": "number",
                    "description": "Discount amount in quote currency"
                },
                "base_discount_amount": {
                    "type": "number",
                    "description": "Discount amount in base currency"
                },
                "subtotal_with_discount": {
                    "type": "number",
                    "description": "Subtotal in quote currency with applied discount"
                },
                "base_subtotal_with_discount": {
                    "type": "number",
                    "description": "Subtotal in base currency with applied discount"
                },
                "shipping_amount": {
                    "type": "number",
                    "description": "Shipping amount in quote currency"
                },
                "base_shipping_amount": {
                    "type": "number",
                    "description": "Shipping amount in base currency"
                },
                "shipping_discount_amount": {
                    "type": "number",
                    "description": "Shipping discount amount in quote currency"
                },
                "base_shipping_discount_amount": {
                    "type": "number",
                    "description": "Shipping discount amount in base currency"
                },
                "tax_amount": {
                    "type": "number",
                    "description": "Tax amount in quote currency"
                },
                "base_tax_amount": {
                    "type": "number",
                    "description": "Tax amount in base currency"
                },
                "weee_tax_applied_amount": {
                    "type": "number",
                    "description": "Item weee tax applied amount in quote currency."
                },
                "shipping_tax_amount": {
                    "type": "number",
                    "description": "Shipping tax amount in quote currency"
                },
                "base_shipping_tax_amount": {
                    "type": "number",
                    "description": "Shipping tax amount in base currency"
                },
                "subtotal_incl_tax": {
                    "type": "number",
                    "description": "Subtotal including tax in quote currency"
                },
                "base_subtotal_incl_tax": {
                    "type": "number",
                    "description": "Subtotal including tax in base currency"
                },
                "shipping_incl_tax": {
                    "type": "number",
                    "description": "Shipping including tax in quote currency"
                },
                "base_shipping_incl_tax": {
                    "type": "number",
                    "description": "Shipping including tax in base currency"
                },
                "base_currency_code": {
                    "type": "string",
                    "description": "Base currency code"
                },
                "quote_currency_code": {
                    "type": "string",
                    "description": "Quote currency code"
                },
                "coupon_code": {
                    "type": "string",
                    "description": "Applied coupon code"
                },
                "items_qty": {
                    "type": "integer",
                    "description": "Items qty"
                },
                "items": {
                    "type": "array",
                    "description": "Totals by items",
                    "items": {
                        "$ref": "#/definitions/quote-data-totals-item-interface"
                    }
                },
                "total_segments": {
                    "type": "array",
                    "description": "Dynamically calculated totals",
                    "items": {
                        "$ref": "#/definitions/quote-data-total-segment-interface"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-totals-extension-interface"
                }
            },
            "required": [
                "weee_tax_applied_amount",
                "total_segments"
            ]
        },
        "quote-data-totals-item-interface": {
            "type": "object",
            "description": "Interface TotalsItemInterface",
            "properties": {
                "item_id": {
                    "type": "integer",
                    "description": "Item id"
                },
                "price": {
                    "type": "number",
                    "description": "Item price in quote currency."
                },
                "base_price": {
                    "type": "number",
                    "description": "Item price in base currency."
                },
                "qty": {
                    "type": "number",
                    "description": "Item quantity."
                },
                "row_total": {
                    "type": "number",
                    "description": "Row total in quote currency."
                },
                "base_row_total": {
                    "type": "number",
                    "description": "Row total in base currency."
                },
                "row_total_with_discount": {
                    "type": "number",
                    "description": "Row total with discount in quote currency. Otherwise, null."
                },
                "tax_amount": {
                    "type": "number",
                    "description": "Tax amount in quote currency. Otherwise, null."
                },
                "base_tax_amount": {
                    "type": "number",
                    "description": "Tax amount in base currency. Otherwise, null."
                },
                "tax_percent": {
                    "type": "number",
                    "description": "Tax percent. Otherwise, null."
                },
                "discount_amount": {
                    "type": "number",
                    "description": "Discount amount in quote currency. Otherwise, null."
                },
                "base_discount_amount": {
                    "type": "number",
                    "description": "Discount amount in base currency. Otherwise, null."
                },
                "discount_percent": {
                    "type": "number",
                    "description": "Discount percent. Otherwise, null."
                },
                "price_incl_tax": {
                    "type": "number",
                    "description": "Price including tax in quote currency. Otherwise, null."
                },
                "base_price_incl_tax": {
                    "type": "number",
                    "description": "Price including tax in base currency. Otherwise, null."
                },
                "row_total_incl_tax": {
                    "type": "number",
                    "description": "Row total including tax in quote currency. Otherwise, null."
                },
                "base_row_total_incl_tax": {
                    "type": "number",
                    "description": "Row total including tax in base currency. Otherwise, null."
                },
                "options": {
                    "type": "string",
                    "description": "Item price in quote currency."
                },
                "weee_tax_applied_amount": {
                    "type": "number",
                    "description": "Item weee tax applied amount in quote currency."
                },
                "weee_tax_applied": {
                    "type": "string",
                    "description": "Item weee tax applied in quote currency."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-totals-item-extension-interface"
                },
                "name": {
                    "type": "string",
                    "description": "Product name. Otherwise, null."
                }
            },
            "required": [
                "item_id",
                "price",
                "base_price",
                "qty",
                "row_total",
                "base_row_total",
                "options",
                "weee_tax_applied_amount",
                "weee_tax_applied"
            ]
        },
        "quote-data-totals-item-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsItemInterface"
        },
        "quote-data-total-segment-interface": {
            "type": "object",
            "description": "Interface TotalsInterface",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Code"
                },
                "title": {
                    "type": "string",
                    "description": "Total title"
                },
                "value": {
                    "type": "number",
                    "description": "Total value"
                },
                "area": {
                    "type": "string",
                    "description": "Display area code."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/quote-data-total-segment-extension-interface"
                }
            },
            "required": [
                "code",
                "value"
            ]
        },
        "quote-data-total-segment-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalSegmentInterface",
            "properties": {
                "tax_grandtotal_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tax-data-grand-total-details-interface"
                    }
                },
                "vertex_tax_calculation_messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "tax-data-grand-total-details-interface": {
            "type": "object",
            "description": "Interface GrandTotalDetailsInterface",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "Tax amount value"
                },
                "rates": {
                    "type": "array",
                    "description": "Tax rates info",
                    "items": {
                        "$ref": "#/definitions/tax-data-grand-total-rates-interface"
                    }
                },
                "group_id": {
                    "type": "integer",
                    "description": "Group identifier"
                }
            },
            "required": [
                "amount",
                "rates",
                "group_id"
            ]
        },
        "tax-data-grand-total-rates-interface": {
            "type": "object",
            "description": "Interface GrandTotalRatesInterface",
            "properties": {
                "percent": {
                    "type": "string",
                    "description": "Tax percentage value"
                },
                "title": {
                    "type": "string",
                    "description": "Rate title"
                }
            },
            "required": [
                "percent",
                "title"
            ]
        },
        "quote-data-totals-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsInterface",
            "properties": {
                "coupon_label": {
                    "type": "string"
                }
            }
        },
        "checkout-data-shipping-information-interface": {
            "type": "object",
            "description": "Interface ShippingInformationInterface",
            "properties": {
                "shipping_address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "billing_address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "shipping_method_code": {
                    "type": "string",
                    "description": "Shipping method code"
                },
                "shipping_carrier_code": {
                    "type": "string",
                    "description": "Carrier code"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/checkout-data-shipping-information-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "shipping_address",
                "shipping_method_code",
                "shipping_carrier_code"
            ]
        },
        "checkout-data-shipping-information-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\ShippingInformationInterface"
        },
        "checkout-data-payment-details-interface": {
            "type": "object",
            "description": "Interface PaymentDetailsInterface",
            "properties": {
                "payment_methods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/quote-data-payment-method-interface"
                    }
                },
                "totals": {
                    "$ref": "#/definitions/quote-data-totals-interface"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/checkout-data-payment-details-extension-interface"
                }
            },
            "required": [
                "payment_methods",
                "totals"
            ]
        },
        "checkout-data-payment-details-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\PaymentDetailsInterface"
        },
        "checkout-data-totals-information-interface": {
            "type": "object",
            "description": "Interface TotalsInformationInterface",
            "properties": {
                "address": {
                    "$ref": "#/definitions/quote-data-address-interface"
                },
                "shipping_method_code": {
                    "type": "string",
                    "description": "Shipping method code"
                },
                "shipping_carrier_code": {
                    "type": "string",
                    "description": "Carrier code"
                },
                "extension_attributes": {
                    "$ref": "#/definitions/checkout-data-totals-information-extension-interface"
                },
                "custom_attributes": {
                    "type": "array",
                    "description": "Custom attributes values.",
                    "items": {
                        "$ref": "#/definitions/framework-attribute-interface"
                    }
                }
            },
            "required": [
                "address"
            ]
        },
        "checkout-data-totals-information-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\TotalsInformationInterface"
        },
        "inventory-in-store-pickup-api-data-search-result-interface": {
            "type": "object",
            "description": "Search results for providing pickup locations.",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "Items list.",
                    "items": {
                        "$ref": "#/definitions/inventory-in-store-pickup-api-data-pickup-location-interface"
                    }
                },
                "search_request": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-interface"
                },
                "total_count": {
                    "type": "integer",
                    "description": "Total count."
                }
            },
            "required": [
                "items",
                "search_request",
                "total_count"
            ]
        },
        "inventory-in-store-pickup-api-data-pickup-location-interface": {
            "type": "object",
            "description": "Represents sources projection on In-Store Pickup context. Realisation must follow immutable DTO concept. Partial immutability done according to restriction of current Extension Attributes implementation.",
            "properties": {
                "pickup_location_code": {
                    "type": "string",
                    "description": "Source code of Pickup Location."
                },
                "name": {
                    "type": "string",
                    "description": "Pickup Location name."
                },
                "email": {
                    "type": "string",
                    "description": "Pickup Location contact email."
                },
                "fax": {
                    "type": "string",
                    "description": "Fax contact info."
                },
                "contact_name": {
                    "type": "string",
                    "description": "Pickup Location contact name."
                },
                "description": {
                    "type": "string",
                    "description": "Pickup Location description."
                },
                "latitude": {
                    "type": "number",
                    "description": "Pickup Location latitude."
                },
                "longitude": {
                    "type": "number",
                    "description": "Pickup Location longitude."
                },
                "country_id": {
                    "type": "string",
                    "description": "Pickup Location country ID."
                },
                "region_id": {
                    "type": "integer",
                    "description": "Pickup Location region ID."
                },
                "region": {
                    "type": "string",
                    "description": "Pickup Location region."
                },
                "city": {
                    "type": "string",
                    "description": "Pickup Location city."
                },
                "street": {
                    "type": "string",
                    "description": "Pickup Location street."
                },
                "postcode": {
                    "type": "string",
                    "description": "Pickup Location postcode."
                },
                "phone": {
                    "type": "string",
                    "description": "Pickup Location phone."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-pickup-location-extension-interface"
                }
            },
            "required": [
                "pickup_location_code"
            ]
        },
        "inventory-in-store-pickup-api-data-pickup-location-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\PickupLocationInterface"
        },
        "inventory-in-store-pickup-api-data-search-request-interface": {
            "type": "object",
            "description": "Endpoint used to search Pickup Locations by different parameters: - by attribute filters fields @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequest\\FiltersInterface - by distance to the address @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequest\\AreaInterface Also, endpoint supports paging and sort orders.",
            "properties": {
                "area": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-area-interface"
                },
                "filters": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-filters-interface"
                },
                "page_size": {
                    "type": "integer",
                    "description": "Page size."
                },
                "current_page": {
                    "type": "integer",
                    "description": "Current page."
                },
                "scope_type": {
                    "type": "string",
                    "description": "Sales Channel Type."
                },
                "scope_code": {
                    "type": "string",
                    "description": "Sales Channel code."
                },
                "sort": {
                    "type": "array",
                    "description": "Sort Order.",
                    "items": {
                        "$ref": "#/definitions/framework-sort-order"
                    }
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-extension-interface"
                }
            },
            "required": [
                "current_page",
                "scope_type",
                "scope_code"
            ]
        },
        "inventory-in-store-pickup-api-data-search-request-area-interface": {
            "type": "object",
            "description": "Filter by Distance to the Address. Pickup Locations will be filtered by distance according to the geo-position of the entered address. Required fields for the address are country and one of the field: region or city or postcode.",
            "properties": {
                "radius": {
                    "type": "integer",
                    "description": "Search radius in KM."
                },
                "search_term": {
                    "type": "string",
                    "description": "Search term string."
                }
            },
            "required": [
                "radius",
                "search_term"
            ]
        },
        "inventory-in-store-pickup-api-data-search-request-filters-interface": {
            "type": "object",
            "description": "Filter to filter by Fields. Each field may be filtered with different condition type. Supported condition types restricted by @see \\Magento\\Framework\\Api\\SearchCriteriaInterface",
            "properties": {
                "country": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface"
                },
                "postcode": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface"
                },
                "region": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface"
                },
                "region_id": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface"
                },
                "city": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface"
                },
                "street": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface"
                },
                "name": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface"
                },
                "pickup_location_code": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-filter-interface"
                }
            }
        },
        "inventory-in-store-pickup-api-data-search-request-filter-interface": {
            "type": "object",
            "description": "Filter for Pickup Location search.",
            "properties": {
                "value": {
                    "type": "string",
                    "description": "Value."
                },
                "condition_type": {
                    "type": "string",
                    "description": "Condition Type."
                }
            },
            "required": [
                "value",
                "condition_type"
            ]
        },
        "inventory-in-store-pickup-api-data-search-request-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequestInterface",
            "properties": {
                "products_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-product-info-interface"
                    }
                }
            }
        },
        "inventory-in-store-pickup-api-data-search-request-product-info-interface": {
            "type": "object",
            "description": "Product Info Data Transfer Object.",
            "properties": {
                "sku": {
                    "type": "string",
                    "description": "Product SKU."
                },
                "extension_attributes": {
                    "$ref": "#/definitions/inventory-in-store-pickup-api-data-search-request-product-info-extension-interface"
                }
            },
            "required": [
                "sku"
            ]
        },
        "inventory-in-store-pickup-api-data-search-request-product-info-extension-interface": {
            "type": "object",
            "description": "ExtensionInterface class for @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequest\\ProductInfoInterface"
        },
        "pay-pal-braintree-data-auth-data-interface": {
            "type": "object",
            "description": "Interface AuthDataInterface",
            "properties": {
                "client_token": {
                    "type": "string",
                    "description": "Client token"
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name"
                },
                "action_success": {
                    "type": "string",
                    "description": "To success page"
                },
                "logged_in": {
                    "type": "boolean"
                },
                "store_code": {
                    "type": "string",
                    "description": "Current store code"
                }
            },
            "required": [
                "display_name",
                "action_success",
                "logged_in",
                "store_code"
            ]
        },
        "vertex-address-validation-api-data-address-interface": {
            "type": "object",
            "description": "This is the interface for submission to the API.  For ease the API only takes interfaces the same as the SDK, but the SDK model cannot implement the interface.  Since the SDK model technically isn't API, we re-implement a simple DTO to handle the scenario.",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The proper name of the city"
                },
                "country": {
                    "type": "string",
                    "description": "ISO 3166-1 Alpha-3 country code"
                },
                "main_division": {
                    "type": "string",
                    "description": "The proper name or the postal abbreviation of the state, province, or territory"
                },
                "postal_code": {
                    "type": "string",
                    "description": "The Postal Code"
                },
                "street_address": {
                    "type": "array",
                    "description": "The street address",
                    "items": {
                        "type": "string"
                    }
                },
                "sub_division": {
                    "type": "string",
                    "description": "The name of the county"
                }
            },
            "required": [
                "street_address"
            ]
        },
        "vertex-address-validation-api-data-cleansed-address-interface": {
            "type": "object",
            "description": "What we want to output to the API contains more data than what we want to bring in.  Chiefly, we want to ensure we're sending Magento data out (instead of Vertex data). That means sending Region IDs, and 2-character ISO country codes.",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "country_name": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "region_id": {
                    "type": "integer"
                },
                "region_name": {
                    "type": "string"
                },
                "street_address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sub_division": {
                    "type": "string",
                    "description": "The regional sub division, such as a county or parish"
                }
            },
            "required": [
                "street_address"
            ]
        }
    }
}