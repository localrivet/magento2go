// Code generated by go-swagger; DO NOT EDIT.

package amazon_payment_address_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/localrivet/magento2go/models"
)

// AmazonPaymentAddressManagementV1GetBillingAddressPutReader is a Reader for the AmazonPaymentAddressManagementV1GetBillingAddressPut structure.
type AmazonPaymentAddressManagementV1GetBillingAddressPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AmazonPaymentAddressManagementV1GetBillingAddressPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAmazonPaymentAddressManagementV1GetBillingAddressPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAmazonPaymentAddressManagementV1GetBillingAddressPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAmazonPaymentAddressManagementV1GetBillingAddressPutOK creates a AmazonPaymentAddressManagementV1GetBillingAddressPutOK with default headers values
func NewAmazonPaymentAddressManagementV1GetBillingAddressPutOK() *AmazonPaymentAddressManagementV1GetBillingAddressPutOK {
	return &AmazonPaymentAddressManagementV1GetBillingAddressPutOK{}
}

/* AmazonPaymentAddressManagementV1GetBillingAddressPutOK describes a response with status code 200, with default header values.

200 Success.
*/
type AmazonPaymentAddressManagementV1GetBillingAddressPutOK struct {
	Payload string
}

func (o *AmazonPaymentAddressManagementV1GetBillingAddressPutOK) Error() string {
	return fmt.Sprintf("[PUT /V1/amazon-billing-address/{amazonOrderReferenceId}][%d] amazonPaymentAddressManagementV1GetBillingAddressPutOK  %+v", 200, o.Payload)
}
func (o *AmazonPaymentAddressManagementV1GetBillingAddressPutOK) GetPayload() string {
	return o.Payload
}

func (o *AmazonPaymentAddressManagementV1GetBillingAddressPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAmazonPaymentAddressManagementV1GetBillingAddressPutDefault creates a AmazonPaymentAddressManagementV1GetBillingAddressPutDefault with default headers values
func NewAmazonPaymentAddressManagementV1GetBillingAddressPutDefault(code int) *AmazonPaymentAddressManagementV1GetBillingAddressPutDefault {
	return &AmazonPaymentAddressManagementV1GetBillingAddressPutDefault{
		_statusCode: code,
	}
}

/* AmazonPaymentAddressManagementV1GetBillingAddressPutDefault describes a response with status code -1, with default header values.

Unexpected error
*/
type AmazonPaymentAddressManagementV1GetBillingAddressPutDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the amazon payment address management v1 get billing address put default response
func (o *AmazonPaymentAddressManagementV1GetBillingAddressPutDefault) Code() int {
	return o._statusCode
}

func (o *AmazonPaymentAddressManagementV1GetBillingAddressPutDefault) Error() string {
	return fmt.Sprintf("[PUT /V1/amazon-billing-address/{amazonOrderReferenceId}][%d] amazonPaymentAddressManagementV1GetBillingAddressPut default  %+v", o._statusCode, o.Payload)
}
func (o *AmazonPaymentAddressManagementV1GetBillingAddressPutDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AmazonPaymentAddressManagementV1GetBillingAddressPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AmazonPaymentAddressManagementV1GetBillingAddressPutBody amazon payment address management v1 get billing address put body
swagger:model AmazonPaymentAddressManagementV1GetBillingAddressPutBody
*/
type AmazonPaymentAddressManagementV1GetBillingAddressPutBody struct {

	// address consent token
	// Required: true
	AddressConsentToken *string `json:"addressConsentToken"`
}

// Validate validates this amazon payment address management v1 get billing address put body
func (o *AmazonPaymentAddressManagementV1GetBillingAddressPutBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddressConsentToken(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AmazonPaymentAddressManagementV1GetBillingAddressPutBody) validateAddressConsentToken(formats strfmt.Registry) error {

	if err := validate.Required("amazonPaymentAddressManagementV1GetBillingAddressPutBody"+"."+"addressConsentToken", "body", o.AddressConsentToken); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this amazon payment address management v1 get billing address put body based on context it is used
func (o *AmazonPaymentAddressManagementV1GetBillingAddressPutBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AmazonPaymentAddressManagementV1GetBillingAddressPutBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AmazonPaymentAddressManagementV1GetBillingAddressPutBody) UnmarshalBinary(b []byte) error {
	var res AmazonPaymentAddressManagementV1GetBillingAddressPutBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
