// Code generated by go-swagger; DO NOT EDIT.

package vertex_address_validation_address_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"magento2go/models"
)

// VertexAddressValidationAddressManagementV1GetValidAddressPostReader is a Reader for the VertexAddressValidationAddressManagementV1GetValidAddressPost structure.
type VertexAddressValidationAddressManagementV1GetValidAddressPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVertexAddressValidationAddressManagementV1GetValidAddressPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewVertexAddressValidationAddressManagementV1GetValidAddressPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVertexAddressValidationAddressManagementV1GetValidAddressPostOK creates a VertexAddressValidationAddressManagementV1GetValidAddressPostOK with default headers values
func NewVertexAddressValidationAddressManagementV1GetValidAddressPostOK() *VertexAddressValidationAddressManagementV1GetValidAddressPostOK {
	return &VertexAddressValidationAddressManagementV1GetValidAddressPostOK{}
}

/* VertexAddressValidationAddressManagementV1GetValidAddressPostOK describes a response with status code 200, with default header values.

200 Success.
*/
type VertexAddressValidationAddressManagementV1GetValidAddressPostOK struct {
	Payload *models.QuoteDataAddressInterface
}

func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostOK) Error() string {
	return fmt.Sprintf("[POST /V1/vertex-address-validation/vertex-address][%d] vertexAddressValidationAddressManagementV1GetValidAddressPostOK  %+v", 200, o.Payload)
}
func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostOK) GetPayload() *models.QuoteDataAddressInterface {
	return o.Payload
}

func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QuoteDataAddressInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVertexAddressValidationAddressManagementV1GetValidAddressPostDefault creates a VertexAddressValidationAddressManagementV1GetValidAddressPostDefault with default headers values
func NewVertexAddressValidationAddressManagementV1GetValidAddressPostDefault(code int) *VertexAddressValidationAddressManagementV1GetValidAddressPostDefault {
	return &VertexAddressValidationAddressManagementV1GetValidAddressPostDefault{
		_statusCode: code,
	}
}

/* VertexAddressValidationAddressManagementV1GetValidAddressPostDefault describes a response with status code -1, with default header values.

Unexpected error
*/
type VertexAddressValidationAddressManagementV1GetValidAddressPostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the vertex address validation address management v1 get valid address post default response
func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostDefault) Code() int {
	return o._statusCode
}

func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/vertex-address-validation/vertex-address][%d] vertexAddressValidationAddressManagementV1GetValidAddressPost default  %+v", o._statusCode, o.Payload)
}
func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*VertexAddressValidationAddressManagementV1GetValidAddressPostBody vertex address validation address management v1 get valid address post body
swagger:model VertexAddressValidationAddressManagementV1GetValidAddressPostBody
*/
type VertexAddressValidationAddressManagementV1GetValidAddressPostBody struct {

	// address
	// Required: true
	Address *models.QuoteDataAddressInterface `json:"address"`
}

// Validate validates this vertex address validation address management v1 get valid address post body
func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostBody) validateAddress(formats strfmt.Registry) error {

	if err := validate.Required("vertexAddressValidationAddressManagementV1GetValidAddressPostBody"+"."+"address", "body", o.Address); err != nil {
		return err
	}

	if o.Address != nil {
		if err := o.Address.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vertexAddressValidationAddressManagementV1GetValidAddressPostBody" + "." + "address")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vertexAddressValidationAddressManagementV1GetValidAddressPostBody" + "." + "address")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this vertex address validation address management v1 get valid address post body based on the context it is used
func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAddress(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostBody) contextValidateAddress(ctx context.Context, formats strfmt.Registry) error {

	if o.Address != nil {
		if err := o.Address.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("vertexAddressValidationAddressManagementV1GetValidAddressPostBody" + "." + "address")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("vertexAddressValidationAddressManagementV1GetValidAddressPostBody" + "." + "address")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *VertexAddressValidationAddressManagementV1GetValidAddressPostBody) UnmarshalBinary(b []byte) error {
	var res VertexAddressValidationAddressManagementV1GetValidAddressPostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
